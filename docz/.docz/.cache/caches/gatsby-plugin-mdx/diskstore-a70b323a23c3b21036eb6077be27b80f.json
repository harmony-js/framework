{"expireTime":9007200832365614000,"key":"gatsby-plugin-mdx-entire-payload-91ee8d9be8820b89dd2ac2393404631e-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"HarmonyJS Persistence","position":{"start":{"line":8,"column":3,"offset":170},"end":{"line":8,"column":24,"offset":191},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":8,"column":24,"offset":191},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":10,"column":25,"offset":217},"indent":[]}},{"type":"text","value":" handles the data of our application. It provides a convenient way to describe our models, and\nconnect them to our databases through accessors.","position":{"start":{"line":10,"column":25,"offset":217},"end":{"line":11,"column":49,"offset":360},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":11,"column":49,"offset":360},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":4,"offset":365},"end":{"line":13,"column":9,"offset":370},"indent":[]}}],"position":{"start":{"line":13,"column":2,"offset":363},"end":{"line":13,"column":11,"offset":372},"indent":[]}},{"type":"text","value":" While not mandatory, ","position":{"start":{"line":13,"column":11,"offset":372},"end":{"line":13,"column":33,"offset":394},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.org/","children":[{"type":"text","value":"GraphQL","position":{"start":{"line":13,"column":34,"offset":395},"end":{"line":13,"column":41,"offset":402},"indent":[]}}],"position":{"start":{"line":13,"column":33,"offset":394},"end":{"line":13,"column":64,"offset":425},"indent":[]}},{"type":"text","value":" is the main target of the persistence module, and is needed","position":{"start":{"line":13,"column":64,"offset":425},"end":{"line":13,"column":124,"offset":485},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":362},"end":{"line":13,"column":125,"offset":486},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":125,"offset":486},"end":{"line":14,"column":1,"offset":487},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to take full advantage of HarmonyJS","position":{"start":{"line":14,"column":2,"offset":488},"end":{"line":14,"column":37,"offset":523},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":487},"end":{"line":14,"column":38,"offset":524},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":362},"end":{"line":14,"column":38,"offset":524},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Persistence","position":{"start":{"line":16,"column":4,"offset":529},"end":{"line":16,"column":17,"offset":542},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":526},"end":{"line":16,"column":17,"offset":542},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":18,"column":1,"offset":544},"end":{"line":18,"column":25,"offset":568},"indent":[]}},{"type":"text","value":" default export is the ","position":{"start":{"line":18,"column":25,"offset":568},"end":{"line":18,"column":48,"offset":591},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":18,"column":48,"offset":591},"end":{"line":18,"column":61,"offset":604},"indent":[]}},{"type":"text","value":" constructor.","position":{"start":{"line":18,"column":61,"offset":604},"end":{"line":18,"column":74,"offset":617},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":544},"end":{"line":18,"column":74,"offset":617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This constructor allows us to create a ","position":{"start":{"line":20,"column":1,"offset":619},"end":{"line":20,"column":40,"offset":658},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":20,"column":40,"offset":658},"end":{"line":20,"column":53,"offset":671},"indent":[]}},{"type":"text","value":" instance, which can be configured to handle our database accesses.\nA ","position":{"start":{"line":20,"column":53,"offset":671},"end":{"line":21,"column":3,"offset":741},"indent":[1]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":21,"column":3,"offset":741},"end":{"line":21,"column":16,"offset":754},"indent":[]}},{"type":"text","value":" instance only has two publicly available methods: the constructor itself, and an ","position":{"start":{"line":21,"column":16,"offset":754},"end":{"line":21,"column":98,"offset":836},"indent":[]}},{"type":"inlineCode","value":"initialize","position":{"start":{"line":21,"column":98,"offset":836},"end":{"line":21,"column":110,"offset":848},"indent":[]}},{"type":"text","value":" function.","position":{"start":{"line":21,"column":110,"offset":848},"end":{"line":21,"column":120,"offset":858},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":619},"end":{"line":21,"column":120,"offset":858},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::new(","position":{"start":{"line":23,"column":5,"offset":864},"end":{"line":23,"column":24,"offset":883},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfig","children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":23,"column":25,"offset":884},"end":{"line":23,"column":44,"offset":903},"indent":[]}}],"position":{"start":{"line":23,"column":24,"offset":883},"end":{"line":23,"column":65,"offset":924},"indent":[]}},{"type":"inlineCode","value":": config): Persistence","position":{"start":{"line":23,"column":65,"offset":924},"end":{"line":23,"column":89,"offset":948},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":860},"end":{"line":23,"column":89,"offset":948},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Constructor to create a new ","position":{"start":{"line":25,"column":1,"offset":950},"end":{"line":25,"column":29,"offset":978},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":25,"column":29,"offset":978},"end":{"line":25,"column":42,"offset":991},"indent":[]}},{"type":"text","value":" instance. It takes a ","position":{"start":{"line":25,"column":42,"offset":991},"end":{"line":25,"column":64,"offset":1013},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfig","children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":25,"column":65,"offset":1014},"end":{"line":25,"column":84,"offset":1033},"indent":[]}}],"position":{"start":{"line":25,"column":64,"offset":1013},"end":{"line":25,"column":105,"offset":1054},"indent":[]}},{"type":"text","value":" object as parameter\nto configure the instance.","position":{"start":{"line":25,"column":105,"offset":1054},"end":{"line":26,"column":27,"offset":1101},"indent":[1]}}],"position":{"start":{"line":25,"column":1,"offset":950},"end":{"line":26,"column":27,"offset":1101},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"No further initialization steps are executed. To initialize our instance, use the ","position":{"start":{"line":28,"column":1,"offset":1103},"end":{"line":28,"column":83,"offset":1185},"indent":[]}},{"type":"inlineCode","value":"Persistence::initialize","position":{"start":{"line":28,"column":83,"offset":1185},"end":{"line":28,"column":108,"offset":1210},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":28,"column":108,"offset":1210},"end":{"line":28,"column":116,"offset":1218},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1103},"end":{"line":28,"column":116,"offset":1218},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":30,"column":1,"offset":1220},"end":{"line":30,"column":73,"offset":1292},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Persistence from '@harmonyjs/persistence'\n\n// Initialize a new Persistence instance\nconst persistence = new Persistence({\n    models: [...],\n})","position":{"start":{"line":32,"column":1,"offset":1294},"end":{"line":39,"column":4,"offset":1454},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::initialize(): Promise<boolean>","position":{"start":{"line":41,"column":5,"offset":1460},"end":{"line":41,"column":50,"offset":1505},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1456},"end":{"line":41,"column":50,"offset":1505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initialization function computing our models and setting up our database accessors.","position":{"start":{"line":43,"column":1,"offset":1507},"end":{"line":43,"column":84,"offset":1590},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1507},"end":{"line":43,"column":84,"offset":1590},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This functions returns a ","position":{"start":{"line":45,"column":1,"offset":1592},"end":{"line":45,"column":26,"offset":1617},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":45,"column":26,"offset":1617},"end":{"line":45,"column":35,"offset":1626},"indent":[]}},{"type":"text","value":" which resolves when the accessors are done loading.","position":{"start":{"line":45,"column":35,"offset":1626},"end":{"line":45,"column":87,"offset":1678},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1592},"end":{"line":45,"column":87,"offset":1678},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":47,"column":1,"offset":1680},"end":{"line":47,"column":73,"offset":1752},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Persistence from '@harmonyjs/persistence'\n\nasync function run() {\n    // Initialize a new Persistence instance\n    const persistence = new Persistence({\n        models: [...],\n    })\n\n    console.log('Initializing the Persistence instance...')\n\n    // Start our Persistence instance\n    await persistence.initialize()\n\n    console.log('Persistence instance initialized!')\n}\n\nrun()","position":{"start":{"line":49,"column":1,"offset":1754},"end":{"line":67,"column":4,"offset":2151},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::controllers","position":{"start":{"line":69,"column":5,"offset":2157},"end":{"line":69,"column":31,"offset":2183},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2153},"end":{"line":69,"column":31,"offset":2183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":71,"column":1,"offset":2185},"end":{"line":71,"column":5,"offset":2189},"indent":[]}},{"type":"inlineCode","value":"Persistence::controllers","position":{"start":{"line":71,"column":5,"offset":2189},"end":{"line":71,"column":31,"offset":2215},"indent":[]}},{"type":"text","value":" getter exposes two ready-to-use Controllers:","position":{"start":{"line":71,"column":31,"offset":2215},"end":{"line":71,"column":76,"offset":2260},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2185},"end":{"line":71,"column":76,"offset":2260},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"controllers.ControllerGraphQL","position":{"start":{"line":72,"column":3,"offset":2263},"end":{"line":72,"column":34,"offset":2294},"indent":[]}},{"type":"text","value":" can be used to expose a GraphQL endpoint configured with the Persistence instance schema.\nIts constructor accepts one ","position":{"start":{"line":72,"column":34,"offset":2294},"end":{"line":73,"column":29,"offset":2413},"indent":[1]}},{"type":"inlineCode","value":"configuration","position":{"start":{"line":73,"column":29,"offset":2413},"end":{"line":73,"column":44,"offset":2428},"indent":[]}},{"type":"text","value":" argument, of the following type:","position":{"start":{"line":73,"column":44,"offset":2428},"end":{"line":73,"column":77,"offset":2461},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":2263},"end":{"line":73,"column":77,"offset":2461},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":2261},"end":{"line":73,"column":77,"offset":2461},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":2261},"end":{"line":73,"column":77,"offset":2461},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"type ControllerGraphQLConfig = {\n    path: string, // The route on which to expose the GraphQL endpoint\n    enablePlayground: boolean, // Whether to enable the GraphQL Playground page on the endpoint\n}","position":{"start":{"line":74,"column":1,"offset":2462},"end":{"line":79,"column":4,"offset":2673},"indent":[1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"controllers.ControllerEvents","position":{"start":{"line":80,"column":3,"offset":2676},"end":{"line":80,"column":33,"offset":2706},"indent":[]}},{"type":"text","value":" can be used to forward our data events to the application's Socket.IO layer. It doesn't require\nany configuration.","position":{"start":{"line":80,"column":33,"offset":2706},"end":{"line":81,"column":19,"offset":2821},"indent":[1]}}],"position":{"start":{"line":80,"column":3,"offset":2676},"end":{"line":81,"column":19,"offset":2821},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2674},"end":{"line":81,"column":19,"offset":2821},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2674},"end":{"line":81,"column":19,"offset":2821},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":83,"column":4,"offset":2826},"end":{"line":83,"column":23,"offset":2845},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2823},"end":{"line":83,"column":23,"offset":2845},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":85,"column":1,"offset":2847},"end":{"line":85,"column":5,"offset":2851},"indent":[]}},{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":85,"column":5,"offset":2851},"end":{"line":85,"column":24,"offset":2870},"indent":[]}},{"type":"text","value":" object configures a ","position":{"start":{"line":85,"column":24,"offset":2870},"end":{"line":85,"column":45,"offset":2891},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":85,"column":45,"offset":2891},"end":{"line":85,"column":58,"offset":2904},"indent":[]}},{"type":"text","value":" instance. Here are the various parameters available:","position":{"start":{"line":85,"column":58,"offset":2904},"end":{"line":85,"column":111,"offset":2957},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2847},"end":{"line":85,"column":111,"offset":2957},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type PersistenceConfig = {\n  models: Model[],\n  accessors?: {[key: string]: Accessor},\n  defaultAccessor?: string,\n  strict?: boolean,\n  log?: LogConfig,\n}","position":{"start":{"line":87,"column":1,"offset":2959},"end":{"line":95,"column":4,"offset":3124},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::models","position":{"start":{"line":97,"column":5,"offset":3130},"end":{"line":97,"column":32,"offset":3157},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3126},"end":{"line":97,"column":32,"offset":3157},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The mandatory ","position":{"start":{"line":99,"column":1,"offset":3159},"end":{"line":99,"column":15,"offset":3173},"indent":[]}},{"type":"inlineCode","value":"models","position":{"start":{"line":99,"column":15,"offset":3173},"end":{"line":99,"column":23,"offset":3181},"indent":[]}},{"type":"text","value":" field is an array of data-models. Refer to the ","position":{"start":{"line":99,"column":23,"offset":3181},"end":{"line":99,"column":71,"offset":3229},"indent":[]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":99,"column":72,"offset":3230},"end":{"line":99,"column":79,"offset":3237},"indent":[]}}],"position":{"start":{"line":99,"column":71,"offset":3229},"end":{"line":99,"column":88,"offset":3246},"indent":[]}},{"type":"text","value":" definition to learn more about models.","position":{"start":{"line":99,"column":88,"offset":3246},"end":{"line":99,"column":127,"offset":3285},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3159},"end":{"line":99,"column":127,"offset":3285},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This field contains the list of all models to expose in the Persistence schema.","position":{"start":{"line":101,"column":1,"offset":3287},"end":{"line":101,"column":80,"offset":3366},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3287},"end":{"line":101,"column":80,"offset":3366},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::accessors","position":{"start":{"line":103,"column":5,"offset":3372},"end":{"line":103,"column":35,"offset":3402},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3368},"end":{"line":103,"column":35,"offset":3402},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This optional field allows to give a mapping of ","position":{"start":{"line":105,"column":1,"offset":3404},"end":{"line":105,"column":49,"offset":3452},"indent":[]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":105,"column":50,"offset":3453},"end":{"line":105,"column":61,"offset":3464},"indent":[]}}],"position":{"start":{"line":105,"column":49,"offset":3452},"end":{"line":105,"column":82,"offset":3485},"indent":[]}},{"type":"text","value":". Each accessor has a unique key in the map,\nwhich can later be used to identify a ","position":{"start":{"line":105,"column":82,"offset":3485},"end":{"line":106,"column":39,"offset":3568},"indent":[1]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":106,"column":40,"offset":3569},"end":{"line":106,"column":47,"offset":3576},"indent":[]}}],"position":{"start":{"line":106,"column":39,"offset":3568},"end":{"line":106,"column":56,"offset":3585},"indent":[]}},{"type":"text","value":"'s accessor.","position":{"start":{"line":106,"column":56,"offset":3585},"end":{"line":106,"column":68,"offset":3597},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3404},"end":{"line":106,"column":68,"offset":3597},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Refer to the ","position":{"start":{"line":108,"column":1,"offset":3599},"end":{"line":108,"column":14,"offset":3612},"indent":[]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":108,"column":15,"offset":3613},"end":{"line":108,"column":26,"offset":3624},"indent":[]}}],"position":{"start":{"line":108,"column":14,"offset":3612},"end":{"line":108,"column":47,"offset":3645},"indent":[]}},{"type":"text","value":" documentation to learn more.","position":{"start":{"line":108,"column":47,"offset":3645},"end":{"line":108,"column":76,"offset":3674},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3599},"end":{"line":108,"column":76,"offset":3674},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::defaultAccessor","position":{"start":{"line":110,"column":5,"offset":3680},"end":{"line":110,"column":41,"offset":3716},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3676},"end":{"line":110,"column":41,"offset":3716},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Key of the accessor to use when no accessor is specified for a model. If not provided, defaults to the first accessor in the map.","position":{"start":{"line":112,"column":1,"offset":3718},"end":{"line":112,"column":130,"offset":3847},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3718},"end":{"line":112,"column":130,"offset":3847},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::strict","position":{"start":{"line":114,"column":5,"offset":3853},"end":{"line":114,"column":32,"offset":3880},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3849},"end":{"line":114,"column":32,"offset":3880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whether to compile a schema in strict mode. When using strict mode, only CRUD actions for which a ","position":{"start":{"line":116,"column":1,"offset":3882},"end":{"line":116,"column":99,"offset":3980},"indent":[]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":116,"column":99,"offset":3980},"end":{"line":116,"column":106,"offset":3987},"indent":[]}},{"type":"text","value":" function has been provided\nwill be added to the schema. To learn more about ","position":{"start":{"line":116,"column":106,"offset":3987},"end":{"line":117,"column":50,"offset":4064},"indent":[1]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":117,"column":50,"offset":4064},"end":{"line":117,"column":57,"offset":4071},"indent":[]}},{"type":"text","value":" functions, refer to the ","position":{"start":{"line":117,"column":57,"offset":4071},"end":{"line":117,"column":82,"offset":4096},"indent":[]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":117,"column":83,"offset":4097},"end":{"line":117,"column":90,"offset":4104},"indent":[]}}],"position":{"start":{"line":117,"column":82,"offset":4096},"end":{"line":117,"column":99,"offset":4113},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":117,"column":99,"offset":4113},"end":{"line":117,"column":114,"offset":4128},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3882},"end":{"line":117,"column":114,"offset":4128},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::log","position":{"start":{"line":119,"column":5,"offset":4134},"end":{"line":119,"column":29,"offset":4158},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4130},"end":{"line":119,"column":29,"offset":4158},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Configuration of the way the persistence instance logs its actions. Refer to the ","position":{"start":{"line":121,"column":1,"offset":4160},"end":{"line":121,"column":82,"offset":4241},"indent":[]}},{"type":"link","title":null,"url":"/api/utils#logconfig","children":[{"type":"text","value":"Log util documentation","position":{"start":{"line":121,"column":83,"offset":4242},"end":{"line":121,"column":105,"offset":4264},"indent":[]}}],"position":{"start":{"line":121,"column":82,"offset":4241},"end":{"line":121,"column":128,"offset":4287},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4160},"end":{"line":121,"column":128,"offset":4287},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":123,"column":4,"offset":4292},"end":{"line":123,"column":11,"offset":4299},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4289},"end":{"line":123,"column":11,"offset":4299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":125,"column":1,"offset":4301},"end":{"line":125,"column":5,"offset":4305},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":125,"column":5,"offset":4305},"end":{"line":125,"column":12,"offset":4312},"indent":[]}},{"type":"text","value":" type is used to describe a collection of objects to store in a database. HarmonyJS provides a unified way to\ndescribe such a model, that can later be translated to fit any storage mechanism. This translation is the role of the ","position":{"start":{"line":125,"column":12,"offset":4312},"end":{"line":126,"column":119,"offset":4540},"indent":[1]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":126,"column":120,"offset":4541},"end":{"line":126,"column":131,"offset":4552},"indent":[]}}],"position":{"start":{"line":126,"column":119,"offset":4540},"end":{"line":126,"column":152,"offset":4573},"indent":[]}},{"type":"text","value":" plugins.","position":{"start":{"line":126,"column":152,"offset":4573},"end":{"line":126,"column":161,"offset":4582},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4301},"end":{"line":126,"column":161,"offset":4582},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":128,"column":1,"offset":4584},"end":{"line":128,"column":5,"offset":4588},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":128,"column":5,"offset":4588},"end":{"line":128,"column":12,"offset":4595},"indent":[]}},{"type":"text","value":" type is as follows:","position":{"start":{"line":128,"column":12,"offset":4595},"end":{"line":128,"column":32,"offset":4615},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4584},"end":{"line":128,"column":32,"offset":4615},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type Model = {\n  name: string,\n  schema: {\n    [key: string]: Property\n  },\n\n  computed?: Computed,\n  scopes?: Scopes,\n\n  accessor?: string,\n  external?: boolean,\n}","position":{"start":{"line":130,"column":1,"offset":4617},"end":{"line":143,"column":4,"offset":4791},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Only two properties are required: ","position":{"start":{"line":145,"column":1,"offset":4793},"end":{"line":145,"column":35,"offset":4827},"indent":[]}},{"type":"inlineCode","value":"name","position":{"start":{"line":145,"column":35,"offset":4827},"end":{"line":145,"column":41,"offset":4833},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":145,"column":41,"offset":4833},"end":{"line":145,"column":46,"offset":4838},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":145,"column":46,"offset":4838},"end":{"line":145,"column":54,"offset":4846},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":145,"column":54,"offset":4846},"end":{"line":145,"column":55,"offset":4847},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4793},"end":{"line":145,"column":55,"offset":4847},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":147,"column":3,"offset":4851},"end":{"line":147,"column":7,"offset":4855},"indent":[]}},{"type":"inlineCode","value":"name","position":{"start":{"line":147,"column":7,"offset":4855},"end":{"line":147,"column":13,"offset":4861},"indent":[]}},{"type":"text","value":" property is the name of the collection. This should be a singular noun. ","position":{"start":{"line":147,"column":13,"offset":4861},"end":{"line":147,"column":86,"offset":4934},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":147,"column":86,"offset":4934},"end":{"line":147,"column":92,"offset":4940},"indent":[]}},{"type":"text","value":"\nIf it needs to be a composed word, use kebab case: ","position":{"start":{"line":147,"column":92,"offset":4940},"end":{"line":148,"column":52,"offset":4992},"indent":[1]}},{"type":"inlineCode","value":"'my-multiple-words-name'","position":{"start":{"line":148,"column":52,"offset":4992},"end":{"line":148,"column":78,"offset":5018},"indent":[]}}],"position":{"start":{"line":147,"column":3,"offset":4851},"end":{"line":148,"column":78,"offset":5018},"indent":[1]}}],"position":{"start":{"line":147,"column":1,"offset":4849},"end":{"line":148,"column":78,"offset":5018},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":149,"column":3,"offset":5021},"end":{"line":149,"column":7,"offset":5025},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":149,"column":7,"offset":5025},"end":{"line":149,"column":15,"offset":5033},"indent":[]}},{"type":"text","value":" property is an object defining the base form of our collection. It maps each field name to a ","position":{"start":{"line":149,"column":15,"offset":5033},"end":{"line":149,"column":109,"offset":5127},"indent":[]}},{"type":"link","title":null,"url":"#propertyandtypes","children":[{"type":"inlineCode","value":"Property","position":{"start":{"line":149,"column":110,"offset":5128},"end":{"line":149,"column":120,"offset":5138},"indent":[]}}],"position":{"start":{"line":149,"column":109,"offset":5127},"end":{"line":149,"column":140,"offset":5158},"indent":[]}},{"type":"text","value":"\ndefinition, which is declared using HarmonyJS's ","position":{"start":{"line":149,"column":140,"offset":5158},"end":{"line":150,"column":49,"offset":5207},"indent":[1]}},{"type":"link","title":null,"url":"#propertyandtypes","children":[{"type":"inlineCode","value":"Types","position":{"start":{"line":150,"column":50,"offset":5208},"end":{"line":150,"column":57,"offset":5215},"indent":[]}}],"position":{"start":{"line":150,"column":49,"offset":5207},"end":{"line":150,"column":77,"offset":5235},"indent":[]}},{"type":"text","value":". You can see a sample ","position":{"start":{"line":150,"column":77,"offset":5235},"end":{"line":150,"column":100,"offset":5258},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":150,"column":100,"offset":5258},"end":{"line":150,"column":108,"offset":5266},"indent":[]}},{"type":"text","value":" in the ","position":{"start":{"line":150,"column":108,"offset":5266},"end":{"line":150,"column":116,"offset":5274},"indent":[]}},{"type":"link","title":null,"url":"/guides/creating-models","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":150,"column":117,"offset":5275},"end":{"line":150,"column":124,"offset":5282},"indent":[]}},{"type":"text","value":" guide","position":{"start":{"line":150,"column":124,"offset":5282},"end":{"line":150,"column":130,"offset":5288},"indent":[]}}],"position":{"start":{"line":150,"column":116,"offset":5274},"end":{"line":150,"column":156,"offset":5314},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":150,"column":156,"offset":5314},"end":{"line":150,"column":157,"offset":5315},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":5021},"end":{"line":150,"column":157,"offset":5315},"indent":[1]}}],"position":{"start":{"line":149,"column":1,"offset":5019},"end":{"line":150,"column":157,"offset":5315},"indent":[1]}}],"position":{"start":{"line":147,"column":1,"offset":4849},"end":{"line":150,"column":157,"offset":5315},"indent":[1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":152,"column":1,"offset":5317},"end":{"line":152,"column":7,"offset":5323},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The next two properties are optional and allows us to extend the capabilities of our model: ","position":{"start":{"line":154,"column":1,"offset":5325},"end":{"line":154,"column":93,"offset":5417},"indent":[]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":154,"column":93,"offset":5417},"end":{"line":154,"column":103,"offset":5427},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":154,"column":103,"offset":5427},"end":{"line":154,"column":108,"offset":5432},"indent":[]}},{"type":"inlineCode","value":"scopes","position":{"start":{"line":154,"column":108,"offset":5432},"end":{"line":154,"column":116,"offset":5440},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5325},"end":{"line":154,"column":116,"offset":5440},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":156,"column":3,"offset":5444},"end":{"line":156,"column":7,"offset":5448},"indent":[]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":156,"column":7,"offset":5448},"end":{"line":156,"column":17,"offset":5458},"indent":[]}},{"type":"text","value":" property describes fields that appear when reading an element from the API. Those fields are not actually stored\nin the database: they are ","position":{"start":{"line":156,"column":17,"offset":5458},"end":{"line":157,"column":27,"offset":5598},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"computed","position":{"start":{"line":157,"column":28,"offset":5599},"end":{"line":157,"column":36,"offset":5607},"indent":[]}}],"position":{"start":{"line":157,"column":27,"offset":5598},"end":{"line":157,"column":37,"offset":5608},"indent":[]}},{"type":"text","value":" at read-time by combining database fields. ","position":{"start":{"line":157,"column":37,"offset":5608},"end":{"line":157,"column":81,"offset":5652},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":157,"column":81,"offset":5652},"end":{"line":157,"column":87,"offset":5658},"indent":[]}},{"type":"text","value":"\nThe ","position":{"start":{"line":157,"column":87,"offset":5658},"end":{"line":158,"column":5,"offset":5663},"indent":[1]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":158,"column":5,"offset":5663},"end":{"line":158,"column":15,"offset":5673},"indent":[]}},{"type":"text","value":" property is also the occasion to define custom queries linked to our model. Refer to the ","position":{"start":{"line":158,"column":15,"offset":5673},"end":{"line":158,"column":105,"offset":5763},"indent":[]}},{"type":"link","title":null,"url":"#computed","children":[{"type":"inlineCode","value":"Computed","position":{"start":{"line":158,"column":106,"offset":5764},"end":{"line":158,"column":116,"offset":5774},"indent":[]}}],"position":{"start":{"line":158,"column":105,"offset":5763},"end":{"line":158,"column":128,"offset":5786},"indent":[]}},{"type":"text","value":" type definition\nfor more information.","position":{"start":{"line":158,"column":128,"offset":5786},"end":{"line":159,"column":22,"offset":5824},"indent":[1]}}],"position":{"start":{"line":156,"column":3,"offset":5444},"end":{"line":159,"column":22,"offset":5824},"indent":[1,1,1]}}],"position":{"start":{"line":156,"column":1,"offset":5442},"end":{"line":159,"column":22,"offset":5824},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":160,"column":3,"offset":5827},"end":{"line":160,"column":7,"offset":5831},"indent":[]}},{"type":"inlineCode","value":"scopes","position":{"start":{"line":160,"column":7,"offset":5831},"end":{"line":160,"column":15,"offset":5839},"indent":[]}},{"type":"text","value":" property helps us customize CRUD calls to our model. For each model, HarmonyJS creates default resolvers for common CRUD actions (read, list, count, create, update, delete). ","position":{"start":{"line":160,"column":15,"offset":5839},"end":{"line":160,"column":190,"offset":6014},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":160,"column":190,"offset":6014},"end":{"line":160,"column":196,"offset":6020},"indent":[]}},{"type":"text","value":"\nFor each action, a ","position":{"start":{"line":160,"column":196,"offset":6020},"end":{"line":161,"column":20,"offset":6040},"indent":[1]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":161,"column":20,"offset":6040},"end":{"line":161,"column":27,"offset":6047},"indent":[]}},{"type":"text","value":" function can be defined in order to access the query's argument so that we can edit them, inject some context, or\neven block certain accesses. ","position":{"start":{"line":161,"column":27,"offset":6047},"end":{"line":162,"column":30,"offset":6191},"indent":[1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":162,"column":30,"offset":6191},"end":{"line":162,"column":36,"offset":6197},"indent":[]}},{"type":"text","value":"\nFor more information about ","position":{"start":{"line":162,"column":36,"offset":6197},"end":{"line":163,"column":28,"offset":6225},"indent":[1]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":163,"column":28,"offset":6225},"end":{"line":163,"column":35,"offset":6232},"indent":[]}},{"type":"text","value":" functions, refer to the ","position":{"start":{"line":163,"column":35,"offset":6232},"end":{"line":163,"column":60,"offset":6257},"indent":[]}},{"type":"link","title":null,"url":"#scopes","children":[{"type":"inlineCode","value":"Scopes","position":{"start":{"line":163,"column":61,"offset":6258},"end":{"line":163,"column":69,"offset":6266},"indent":[]}}],"position":{"start":{"line":163,"column":60,"offset":6257},"end":{"line":163,"column":79,"offset":6276},"indent":[]}},{"type":"text","value":" type definition.","position":{"start":{"line":163,"column":79,"offset":6276},"end":{"line":163,"column":96,"offset":6293},"indent":[]}}],"position":{"start":{"line":160,"column":3,"offset":5827},"end":{"line":163,"column":96,"offset":6293},"indent":[1,1,1]}}],"position":{"start":{"line":160,"column":1,"offset":5825},"end":{"line":163,"column":96,"offset":6293},"indent":[1,1,1]}}],"position":{"start":{"line":156,"column":1,"offset":5442},"end":{"line":163,"column":96,"offset":6293},"indent":[1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":165,"column":1,"offset":6295},"end":{"line":165,"column":7,"offset":6301},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Finally, the two last optional properties, ","position":{"start":{"line":167,"column":1,"offset":6303},"end":{"line":167,"column":44,"offset":6346},"indent":[]}},{"type":"inlineCode","value":"accessor","position":{"start":{"line":167,"column":44,"offset":6346},"end":{"line":167,"column":54,"offset":6356},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":167,"column":54,"offset":6356},"end":{"line":167,"column":59,"offset":6361},"indent":[]}},{"type":"inlineCode","value":"external","position":{"start":{"line":167,"column":59,"offset":6361},"end":{"line":167,"column":69,"offset":6371},"indent":[]}},{"type":"text","value":", are parameters to let HarmonyJS know how to handle certain aspect\nof the model lifecycle.","position":{"start":{"line":167,"column":69,"offset":6371},"end":{"line":168,"column":24,"offset":6462},"indent":[1]}}],"position":{"start":{"line":167,"column":1,"offset":6303},"end":{"line":168,"column":24,"offset":6462},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":170,"column":3,"offset":6466},"end":{"line":170,"column":7,"offset":6470},"indent":[]}},{"type":"inlineCode","value":"accessor","position":{"start":{"line":170,"column":7,"offset":6470},"end":{"line":170,"column":17,"offset":6480},"indent":[]}},{"type":"text","value":" property is an optional string that can contain the key of an ","position":{"start":{"line":170,"column":17,"offset":6480},"end":{"line":170,"column":80,"offset":6543},"indent":[]}},{"type":"inlineCode","value":"Accessor","position":{"start":{"line":170,"column":80,"offset":6543},"end":{"line":170,"column":90,"offset":6553},"indent":[]}},{"type":"text","value":" as defined in the ","position":{"start":{"line":170,"column":90,"offset":6553},"end":{"line":170,"column":109,"offset":6572},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfigaccessors","children":[{"type":"inlineCode","value":"PersistenceConfig::accessors","position":{"start":{"line":170,"column":110,"offset":6573},"end":{"line":170,"column":140,"offset":6603},"indent":[]}}],"position":{"start":{"line":170,"column":109,"offset":6572},"end":{"line":170,"column":170,"offset":6633},"indent":[]}},{"type":"text","value":" field. This tells\nHarmonyJS Persistence which accessor to use for this model.","position":{"start":{"line":170,"column":170,"offset":6633},"end":{"line":171,"column":60,"offset":6711},"indent":[1]}}],"position":{"start":{"line":170,"column":3,"offset":6466},"end":{"line":171,"column":60,"offset":6711},"indent":[1]}}],"position":{"start":{"line":170,"column":1,"offset":6464},"end":{"line":171,"column":60,"offset":6711},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":172,"column":3,"offset":6714},"end":{"line":172,"column":7,"offset":6718},"indent":[]}},{"type":"inlineCode","value":"external","position":{"start":{"line":172,"column":7,"offset":6718},"end":{"line":172,"column":17,"offset":6728},"indent":[]}},{"type":"text","value":" boolean is an advanced field only needed when using ","position":{"start":{"line":172,"column":17,"offset":6728},"end":{"line":172,"column":70,"offset":6781},"indent":[]}},{"type":"link","title":null,"url":"https://www.apollographql.com/docs/apollo-server/federation/introduction/","children":[{"type":"text","value":"Apollo Federation","position":{"start":{"line":172,"column":71,"offset":6782},"end":{"line":172,"column":88,"offset":6799},"indent":[]}}],"position":{"start":{"line":172,"column":70,"offset":6781},"end":{"line":172,"column":164,"offset":6875},"indent":[]}},{"type":"text","value":".\nIt tells the GraphQL schema compiler that the given model is external, provided by another federated service.","position":{"start":{"line":172,"column":164,"offset":6875},"end":{"line":173,"column":110,"offset":6986},"indent":[1]}}],"position":{"start":{"line":172,"column":3,"offset":6714},"end":{"line":173,"column":110,"offset":6986},"indent":[1]}}],"position":{"start":{"line":172,"column":1,"offset":6712},"end":{"line":173,"column":110,"offset":6986},"indent":[1]}}],"position":{"start":{"line":170,"column":1,"offset":6464},"end":{"line":173,"column":110,"offset":6986},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Property","position":{"start":{"line":175,"column":5,"offset":6992},"end":{"line":175,"column":15,"offset":7002},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":175,"column":15,"offset":7002},"end":{"line":175,"column":20,"offset":7007},"indent":[]}},{"type":"inlineCode","value":"Types","position":{"start":{"line":175,"column":20,"offset":7007},"end":{"line":175,"column":27,"offset":7014},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":6988},"end":{"line":175,"column":27,"offset":7014},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":177,"column":1,"offset":7016},"end":{"line":177,"column":5,"offset":7020},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":177,"column":5,"offset":7020},"end":{"line":177,"column":15,"offset":7030},"indent":[]}},{"type":"text","value":" type is used to describe a Harmony model. In order to create a correctly formed ","position":{"start":{"line":177,"column":15,"offset":7030},"end":{"line":177,"column":96,"offset":7111},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":177,"column":96,"offset":7111},"end":{"line":177,"column":106,"offset":7121},"indent":[]}},{"type":"text","value":", we use the ","position":{"start":{"line":177,"column":106,"offset":7121},"end":{"line":177,"column":119,"offset":7134},"indent":[]}},{"type":"inlineCode","value":"Types","position":{"start":{"line":177,"column":119,"offset":7134},"end":{"line":177,"column":126,"offset":7141},"indent":[]}},{"type":"text","value":" object\nexported by ","position":{"start":{"line":177,"column":126,"offset":7141},"end":{"line":178,"column":13,"offset":7161},"indent":[1]}},{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":178,"column":13,"offset":7161},"end":{"line":178,"column":37,"offset":7185},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":178,"column":37,"offset":7185},"end":{"line":178,"column":38,"offset":7186},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":7016},"end":{"line":178,"column":38,"offset":7186},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The various ","position":{"start":{"line":180,"column":1,"offset":7188},"end":{"line":180,"column":13,"offset":7200},"indent":[]}},{"type":"inlineCode","value":"Types","position":{"start":{"line":180,"column":13,"offset":7200},"end":{"line":180,"column":20,"offset":7207},"indent":[]}},{"type":"text","value":" properties allow to create a new ","position":{"start":{"line":180,"column":20,"offset":7207},"end":{"line":180,"column":54,"offset":7241},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":180,"column":54,"offset":7241},"end":{"line":180,"column":64,"offset":7251},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":180,"column":64,"offset":7251},"end":{"line":180,"column":65,"offset":7252},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":7188},"end":{"line":180,"column":65,"offset":7252},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.String","position":{"start":{"line":181,"column":3,"offset":7255},"end":{"line":181,"column":17,"offset":7269},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":181,"column":17,"offset":7269},"end":{"line":181,"column":28,"offset":7280},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":181,"column":28,"offset":7280},"end":{"line":181,"column":38,"offset":7290},"indent":[]}},{"type":"text","value":" describing a string field.","position":{"start":{"line":181,"column":38,"offset":7290},"end":{"line":181,"column":65,"offset":7317},"indent":[]}}],"position":{"start":{"line":181,"column":3,"offset":7255},"end":{"line":181,"column":65,"offset":7317},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":7253},"end":{"line":181,"column":65,"offset":7317},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.Number","position":{"start":{"line":182,"column":3,"offset":7320},"end":{"line":182,"column":17,"offset":7334},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":182,"column":17,"offset":7334},"end":{"line":182,"column":28,"offset":7345},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":182,"column":28,"offset":7345},"end":{"line":182,"column":38,"offset":7355},"indent":[]}},{"type":"text","value":" describing an integer number field.","position":{"start":{"line":182,"column":38,"offset":7355},"end":{"line":182,"column":74,"offset":7391},"indent":[]}}],"position":{"start":{"line":182,"column":3,"offset":7320},"end":{"line":182,"column":74,"offset":7391},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":7318},"end":{"line":182,"column":74,"offset":7391},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.Float","position":{"start":{"line":183,"column":3,"offset":7394},"end":{"line":183,"column":16,"offset":7407},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":183,"column":16,"offset":7407},"end":{"line":183,"column":27,"offset":7418},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":183,"column":27,"offset":7418},"end":{"line":183,"column":37,"offset":7428},"indent":[]}},{"type":"text","value":" describing a floating number field.","position":{"start":{"line":183,"column":37,"offset":7428},"end":{"line":183,"column":73,"offset":7464},"indent":[]}}],"position":{"start":{"line":183,"column":3,"offset":7394},"end":{"line":183,"column":73,"offset":7464},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":7392},"end":{"line":183,"column":73,"offset":7464},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.Boolean","position":{"start":{"line":184,"column":3,"offset":7467},"end":{"line":184,"column":18,"offset":7482},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":184,"column":18,"offset":7482},"end":{"line":184,"column":29,"offset":7493},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":184,"column":29,"offset":7493},"end":{"line":184,"column":39,"offset":7503},"indent":[]}},{"type":"text","value":" describing a boolean field.","position":{"start":{"line":184,"column":39,"offset":7503},"end":{"line":184,"column":67,"offset":7531},"indent":[]}}],"position":{"start":{"line":184,"column":3,"offset":7467},"end":{"line":184,"column":67,"offset":7531},"indent":[]}}],"position":{"start":{"line":184,"column":1,"offset":7465},"end":{"line":184,"column":67,"offset":7531},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.Date","position":{"start":{"line":185,"column":3,"offset":7534},"end":{"line":185,"column":15,"offset":7546},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":185,"column":15,"offset":7546},"end":{"line":185,"column":26,"offset":7557},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":185,"column":26,"offset":7557},"end":{"line":185,"column":36,"offset":7567},"indent":[]}},{"type":"text","value":" describing a date field.","position":{"start":{"line":185,"column":36,"offset":7567},"end":{"line":185,"column":61,"offset":7592},"indent":[]}}],"position":{"start":{"line":185,"column":3,"offset":7534},"end":{"line":185,"column":61,"offset":7592},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":7532},"end":{"line":185,"column":61,"offset":7592},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.ID","position":{"start":{"line":186,"column":3,"offset":7595},"end":{"line":186,"column":13,"offset":7605},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":186,"column":13,"offset":7605},"end":{"line":186,"column":24,"offset":7616},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":186,"column":24,"offset":7616},"end":{"line":186,"column":34,"offset":7626},"indent":[]}},{"type":"text","value":" describing an ID field.","position":{"start":{"line":186,"column":34,"offset":7626},"end":{"line":186,"column":58,"offset":7650},"indent":[]}}],"position":{"start":{"line":186,"column":3,"offset":7595},"end":{"line":186,"column":58,"offset":7650},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":7593},"end":{"line":186,"column":58,"offset":7650},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.Array","position":{"start":{"line":187,"column":3,"offset":7653},"end":{"line":187,"column":16,"offset":7666},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":187,"column":16,"offset":7666},"end":{"line":187,"column":27,"offset":7677},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":187,"column":27,"offset":7677},"end":{"line":187,"column":37,"offset":7687},"indent":[]}},{"type":"text","value":" describing an array. Use the ","position":{"start":{"line":187,"column":37,"offset":7687},"end":{"line":187,"column":67,"offset":7717},"indent":[]}},{"type":"inlineCode","value":"Property::of","position":{"start":{"line":187,"column":67,"offset":7717},"end":{"line":187,"column":81,"offset":7731},"indent":[]}},{"type":"text","value":" chaining parameter to set the ","position":{"start":{"line":187,"column":81,"offset":7731},"end":{"line":187,"column":112,"offset":7762},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":187,"column":112,"offset":7762},"end":{"line":187,"column":122,"offset":7772},"indent":[]}},{"type":"text","value":" of which the array is made of.","position":{"start":{"line":187,"column":122,"offset":7772},"end":{"line":187,"column":153,"offset":7803},"indent":[]}}],"position":{"start":{"line":187,"column":3,"offset":7653},"end":{"line":187,"column":153,"offset":7803},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":7651},"end":{"line":187,"column":153,"offset":7803},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.Reference","position":{"start":{"line":188,"column":3,"offset":7806},"end":{"line":188,"column":20,"offset":7823},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":188,"column":20,"offset":7823},"end":{"line":188,"column":31,"offset":7834},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":188,"column":31,"offset":7834},"end":{"line":188,"column":41,"offset":7844},"indent":[]}},{"type":"text","value":" describing a field referencing another model element. Use the ","position":{"start":{"line":188,"column":41,"offset":7844},"end":{"line":188,"column":104,"offset":7907},"indent":[]}},{"type":"inlineCode","value":"Property::of","position":{"start":{"line":188,"column":104,"offset":7907},"end":{"line":188,"column":118,"offset":7921},"indent":[]}},{"type":"text","value":" chaining parameter to set the referenced model by name.","position":{"start":{"line":188,"column":118,"offset":7921},"end":{"line":188,"column":174,"offset":7977},"indent":[]}}],"position":{"start":{"line":188,"column":3,"offset":7806},"end":{"line":188,"column":174,"offset":7977},"indent":[]}}],"position":{"start":{"line":188,"column":1,"offset":7804},"end":{"line":188,"column":174,"offset":7977},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Types.JSON","position":{"start":{"line":189,"column":3,"offset":7980},"end":{"line":189,"column":15,"offset":7992},"indent":[]}},{"type":"text","value":": create a ","position":{"start":{"line":189,"column":15,"offset":7992},"end":{"line":189,"column":26,"offset":8003},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":189,"column":26,"offset":8003},"end":{"line":189,"column":36,"offset":8013},"indent":[]}},{"type":"text","value":" describing a field holding a custom JSON object. No validation is done inside the JSON object,\nsince its schema is not defined.","position":{"start":{"line":189,"column":36,"offset":8013},"end":{"line":190,"column":33,"offset":8141},"indent":[1]}}],"position":{"start":{"line":189,"column":3,"offset":7980},"end":{"line":190,"column":33,"offset":8141},"indent":[1]}}],"position":{"start":{"line":189,"column":1,"offset":7978},"end":{"line":190,"column":33,"offset":8141},"indent":[1]}}],"position":{"start":{"line":181,"column":1,"offset":7253},"end":{"line":190,"column":33,"offset":8141},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":192,"column":1,"offset":8143},"end":{"line":192,"column":7,"offset":8149},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Properties","position":{"start":{"line":194,"column":1,"offset":8151},"end":{"line":194,"column":13,"offset":8163},"indent":[]}},{"type":"text","value":" generated can be configured using a set of chaining parameters, which mutates the ","position":{"start":{"line":194,"column":13,"offset":8163},"end":{"line":194,"column":96,"offset":8246},"indent":[]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":194,"column":96,"offset":8246},"end":{"line":194,"column":106,"offset":8256},"indent":[]}},{"type":"text","value":" and then returns it. The various\nchaining parameters are as follow:","position":{"start":{"line":194,"column":106,"offset":8256},"end":{"line":195,"column":35,"offset":8324},"indent":[1]}}],"position":{"start":{"line":194,"column":1,"offset":8151},"end":{"line":195,"column":35,"offset":8324},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Property::of","position":{"start":{"line":196,"column":3,"offset":8327},"end":{"line":196,"column":17,"offset":8341},"indent":[]}},{"type":"text","value":": used for ","position":{"start":{"line":196,"column":17,"offset":8341},"end":{"line":196,"column":28,"offset":8352},"indent":[]}},{"type":"inlineCode","value":"Types.Array","position":{"start":{"line":196,"column":28,"offset":8352},"end":{"line":196,"column":41,"offset":8365},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":196,"column":41,"offset":8365},"end":{"line":196,"column":45,"offset":8369},"indent":[]}},{"type":"inlineCode","value":"Types.Reference","position":{"start":{"line":196,"column":45,"offset":8369},"end":{"line":196,"column":62,"offset":8386},"indent":[]}},{"type":"text","value":" to set what the array is made of, or the referenced model. ","position":{"start":{"line":196,"column":62,"offset":8386},"end":{"line":196,"column":122,"offset":8446},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":196,"column":122,"offset":8446},"end":{"line":196,"column":128,"offset":8452},"indent":[]}},{"type":"text","value":"\nIn the case of an array, it takes another ","position":{"start":{"line":196,"column":128,"offset":8452},"end":{"line":197,"column":43,"offset":8495},"indent":[1]}},{"type":"inlineCode","value":"Property","position":{"start":{"line":197,"column":43,"offset":8495},"end":{"line":197,"column":53,"offset":8505},"indent":[]}},{"type":"text","value":". In the case of a reference, it takes a ","position":{"start":{"line":197,"column":53,"offset":8505},"end":{"line":197,"column":94,"offset":8546},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":197,"column":94,"offset":8546},"end":{"line":197,"column":101,"offset":8553},"indent":[]}},{"type":"text","value":" either by name (","position":{"start":{"line":197,"column":101,"offset":8553},"end":{"line":197,"column":118,"offset":8570},"indent":[]}},{"type":"inlineCode","value":"string","position":{"start":{"line":197,"column":118,"offset":8570},"end":{"line":197,"column":126,"offset":8578},"indent":[]}},{"type":"text","value":"), or directly as a ","position":{"start":{"line":197,"column":126,"offset":8578},"end":{"line":197,"column":146,"offset":8598},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":197,"column":146,"offset":8598},"end":{"line":197,"column":153,"offset":8605},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":197,"column":153,"offset":8605},"end":{"line":197,"column":161,"offset":8613},"indent":[]}}],"position":{"start":{"line":196,"column":3,"offset":8327},"end":{"line":197,"column":161,"offset":8613},"indent":[1]}}],"position":{"start":{"line":196,"column":1,"offset":8325},"end":{"line":197,"column":161,"offset":8613},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Property::indexed","position":{"start":{"line":198,"column":3,"offset":8616},"end":{"line":198,"column":22,"offset":8635},"indent":[]}},{"type":"text","value":": tells HarmonyJS that our field should result in an index creation.","position":{"start":{"line":198,"column":22,"offset":8635},"end":{"line":198,"column":90,"offset":8703},"indent":[]}}],"position":{"start":{"line":198,"column":3,"offset":8616},"end":{"line":198,"column":90,"offset":8703},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":8614},"end":{"line":198,"column":90,"offset":8703},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Property::unique","position":{"start":{"line":199,"column":3,"offset":8706},"end":{"line":199,"column":21,"offset":8724},"indent":[]}},{"type":"text","value":": tells HarmonyJS that our field should result in a ","position":{"start":{"line":199,"column":21,"offset":8724},"end":{"line":199,"column":73,"offset":8776},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"unique","position":{"start":{"line":199,"column":74,"offset":8777},"end":{"line":199,"column":80,"offset":8783},"indent":[]}}],"position":{"start":{"line":199,"column":73,"offset":8776},"end":{"line":199,"column":81,"offset":8784},"indent":[]}},{"type":"text","value":" index creation.","position":{"start":{"line":199,"column":81,"offset":8784},"end":{"line":199,"column":97,"offset":8800},"indent":[]}}],"position":{"start":{"line":199,"column":3,"offset":8706},"end":{"line":199,"column":97,"offset":8800},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":8704},"end":{"line":199,"column":97,"offset":8800},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Property::required","position":{"start":{"line":200,"column":3,"offset":8803},"end":{"line":200,"column":23,"offset":8823},"indent":[]}},{"type":"text","value":": tells HarmonyJS that our field is required for each write operation.","position":{"start":{"line":200,"column":23,"offset":8823},"end":{"line":200,"column":93,"offset":8893},"indent":[]}}],"position":{"start":{"line":200,"column":3,"offset":8803},"end":{"line":200,"column":93,"offset":8893},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":8801},"end":{"line":200,"column":93,"offset":8893},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Property::external","position":{"start":{"line":201,"column":3,"offset":8896},"end":{"line":201,"column":23,"offset":8916},"indent":[]}},{"type":"text","value":": used in the case of a federated system. Tells that a given field is an external field in a model definition. See ","position":{"start":{"line":201,"column":23,"offset":8916},"end":{"line":201,"column":138,"offset":9031},"indent":[]}},{"type":"link","title":null,"url":"https://www.apollographql.com/docs/apollo-server/federation/introduction/","children":[{"type":"text","value":"Apollo Federation","position":{"start":{"line":201,"column":139,"offset":9032},"end":{"line":201,"column":156,"offset":9049},"indent":[]}}],"position":{"start":{"line":201,"column":138,"offset":9031},"end":{"line":201,"column":232,"offset":9125},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":201,"column":232,"offset":9125},"end":{"line":201,"column":233,"offset":9126},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":8896},"end":{"line":201,"column":233,"offset":9126},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":8894},"end":{"line":201,"column":233,"offset":9126},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":8325},"end":{"line":201,"column":233,"offset":9126},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Computed","position":{"start":{"line":203,"column":5,"offset":9132},"end":{"line":203,"column":15,"offset":9142},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":9128},"end":{"line":203,"column":15,"offset":9142},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":205,"column":1,"offset":9144},"end":{"line":205,"column":5,"offset":9148},"indent":[]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":205,"column":5,"offset":9148},"end":{"line":205,"column":15,"offset":9158},"indent":[]}},{"type":"text","value":" field of a model allows us to extend the capabilities of our model by defining computed fields. It is only available\nwhen using the GraphQL schema system.","position":{"start":{"line":205,"column":15,"offset":9158},"end":{"line":206,"column":38,"offset":9313},"indent":[1]}}],"position":{"start":{"line":205,"column":1,"offset":9144},"end":{"line":206,"column":38,"offset":9313},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Its composition is as follows:","position":{"start":{"line":208,"column":1,"offset":9315},"end":{"line":208,"column":31,"offset":9345},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":9315},"end":{"line":208,"column":31,"offset":9345},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type Computed = {\n  fields: {\n    [key: string]: Field\n  },\n  queries: {\n    [key: string]: ExtendableField\n  },\n  mutations: {\n    [key: string]: ExtendableField\n  },\n}","position":{"start":{"line":210,"column":1,"offset":9347},"end":{"line":222,"column":4,"offset":9526},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":224,"column":1,"offset":9528},"end":{"line":224,"column":5,"offset":9532},"indent":[]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":224,"column":5,"offset":9532},"end":{"line":224,"column":15,"offset":9542},"indent":[]}},{"type":"text","value":" fields is composed of three subfields: ","position":{"start":{"line":224,"column":15,"offset":9542},"end":{"line":224,"column":55,"offset":9582},"indent":[]}},{"type":"inlineCode","value":"fields","position":{"start":{"line":224,"column":55,"offset":9582},"end":{"line":224,"column":63,"offset":9590},"indent":[]}},{"type":"text","value":", which describes fields to add to our model; ","position":{"start":{"line":224,"column":63,"offset":9590},"end":{"line":224,"column":109,"offset":9636},"indent":[]}},{"type":"inlineCode","value":"queries","position":{"start":{"line":224,"column":109,"offset":9636},"end":{"line":224,"column":118,"offset":9645},"indent":[]}},{"type":"text","value":", which\ndescribes GraphQL queries linked to our model; and ","position":{"start":{"line":224,"column":118,"offset":9645},"end":{"line":225,"column":52,"offset":9704},"indent":[1]}},{"type":"inlineCode","value":"mutations","position":{"start":{"line":225,"column":52,"offset":9704},"end":{"line":225,"column":63,"offset":9715},"indent":[]}},{"type":"text","value":", which describes GraphQL mutations linked to our model.","position":{"start":{"line":225,"column":63,"offset":9715},"end":{"line":225,"column":119,"offset":9771},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":9528},"end":{"line":225,"column":119,"offset":9771},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Each of these three subfields implement a map of ","position":{"start":{"line":227,"column":1,"offset":9773},"end":{"line":227,"column":50,"offset":9822},"indent":[]}},{"type":"inlineCode","value":"Field","position":{"start":{"line":227,"column":50,"offset":9822},"end":{"line":227,"column":57,"offset":9829},"indent":[]}},{"type":"text","value":" (or variant ","position":{"start":{"line":227,"column":57,"offset":9829},"end":{"line":227,"column":70,"offset":9842},"indent":[]}},{"type":"inlineCode","value":"ExtendableField","position":{"start":{"line":227,"column":70,"offset":9842},"end":{"line":227,"column":87,"offset":9859},"indent":[]}},{"type":"text","value":") by their name. The ","position":{"start":{"line":227,"column":87,"offset":9859},"end":{"line":227,"column":108,"offset":9880},"indent":[]}},{"type":"inlineCode","value":"Field","position":{"start":{"line":227,"column":108,"offset":9880},"end":{"line":227,"column":115,"offset":9887},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":227,"column":115,"offset":9887},"end":{"line":227,"column":120,"offset":9892},"indent":[]}},{"type":"inlineCode","value":"ExtendableField","position":{"start":{"line":227,"column":120,"offset":9892},"end":{"line":227,"column":137,"offset":9909},"indent":[]}},{"type":"text","value":" type definitions are shown below.","position":{"start":{"line":227,"column":137,"offset":9909},"end":{"line":227,"column":171,"offset":9943},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":9773},"end":{"line":227,"column":171,"offset":9943},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"Field","position":{"start":{"line":229,"column":6,"offset":9950},"end":{"line":229,"column":13,"offset":9957},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":9945},"end":{"line":229,"column":13,"offset":9957},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":231,"column":1,"offset":9959},"end":{"line":231,"column":3,"offset":9961},"indent":[]}},{"type":"inlineCode","value":"Field","position":{"start":{"line":231,"column":3,"offset":9961},"end":{"line":231,"column":10,"offset":9968},"indent":[]}},{"type":"text","value":" is composed of the following properties:","position":{"start":{"line":231,"column":10,"offset":9968},"end":{"line":231,"column":51,"offset":10009},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":9959},"end":{"line":231,"column":51,"offset":10009},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type Field {\n  resolve: ({ args: Object, source: Object, resolvers: Resolver[], context: any }) => any\n  type?: PropertySchema | Property\n  args?: PropertySchema,\n  mode?: FieldModeEnum | FieldModeEnum[]\n}","position":{"start":{"line":233,"column":1,"offset":10011},"end":{"line":240,"column":4,"offset":10226},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"At its core, a ","position":{"start":{"line":242,"column":1,"offset":10228},"end":{"line":242,"column":16,"offset":10243},"indent":[]}},{"type":"inlineCode","value":"Field","position":{"start":{"line":242,"column":16,"offset":10243},"end":{"line":242,"column":23,"offset":10250},"indent":[]}},{"type":"text","value":" needs a ","position":{"start":{"line":242,"column":23,"offset":10250},"end":{"line":242,"column":32,"offset":10259},"indent":[]}},{"type":"inlineCode","value":"resolve","position":{"start":{"line":242,"column":32,"offset":10259},"end":{"line":242,"column":41,"offset":10268},"indent":[]}},{"type":"text","value":" function, which tells GraphQL how to compute its value.\nIt then needs either an ","position":{"start":{"line":242,"column":41,"offset":10268},"end":{"line":243,"column":25,"offset":10349},"indent":[1]}},{"type":"inlineCode","value":"extends","position":{"start":{"line":243,"column":25,"offset":10349},"end":{"line":243,"column":34,"offset":10358},"indent":[]}},{"type":"text","value":" field (only available for ","position":{"start":{"line":243,"column":34,"offset":10358},"end":{"line":243,"column":61,"offset":10385},"indent":[]}},{"type":"inlineCode","value":"queries","position":{"start":{"line":243,"column":61,"offset":10385},"end":{"line":243,"column":70,"offset":10394},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":243,"column":70,"offset":10394},"end":{"line":243,"column":75,"offset":10399},"indent":[]}},{"type":"inlineCode","value":"mutations","position":{"start":{"line":243,"column":75,"offset":10399},"end":{"line":243,"column":86,"offset":10410},"indent":[]}},{"type":"text","value":"), or a ","position":{"start":{"line":243,"column":86,"offset":10410},"end":{"line":243,"column":94,"offset":10418},"indent":[]}},{"type":"inlineCode","value":"type","position":{"start":{"line":243,"column":94,"offset":10418},"end":{"line":243,"column":100,"offset":10424},"indent":[]}},{"type":"text","value":" field.","position":{"start":{"line":243,"column":100,"offset":10424},"end":{"line":243,"column":107,"offset":10431},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":10228},"end":{"line":243,"column":107,"offset":10431},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Scopes","position":{"start":{"line":245,"column":5,"offset":10437},"end":{"line":245,"column":13,"offset":10445},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":10433},"end":{"line":245,"column":13,"offset":10445},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Other exports","position":{"start":{"line":247,"column":4,"offset":10450},"end":{"line":247,"column":17,"offset":10463},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":10447},"end":{"line":247,"column":17,"offset":10463},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"FieldMode","position":{"start":{"line":249,"column":5,"offset":10469},"end":{"line":249,"column":14,"offset":10478},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":10465},"end":{"line":249,"column":14,"offset":10478},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":252,"column":1,"offset":10481},"end":{"line":252,"column":31,"offset":10511},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":252,"column":31,"offset":10511}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"harmonyjs-persistence\"\n    }}>{`HarmonyJS Persistence`}</h1>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{` handles the data of our application. It provides a convenient way to describe our models, and\nconnect them to our databases through accessors.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` While not mandatory, `}<a parentName=\"em\" {...{\n          \"href\": \"https://graphql.org/\"\n        }}>{`GraphQL`}</a>{` is the main target of the persistence module, and is needed`}</em>{`\n`}<em parentName=\"p\">{`to take full advantage of HarmonyJS`}</em></p>\n    <h2 {...{\n      \"id\": \"persistence\"\n    }}><inlineCode parentName=\"h2\">{`Persistence`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{` default export is the `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` constructor.`}</p>\n    <p>{`This constructor allows us to create a `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance, which can be configured to handle our database accesses.\nA `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance only has two publicly available methods: the constructor itself, and an `}<inlineCode parentName=\"p\">{`initialize`}</inlineCode>{` function.`}</p>\n    <h3 {...{\n      \"id\": \"persistencenewpersistenceconfig-config-persistence\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::new(`}</inlineCode><a parentName=\"h3\" {...{\n        \"href\": \"#persistenceconfig\"\n      }}><inlineCode parentName=\"a\">{`PersistenceConfig`}</inlineCode></a><inlineCode parentName=\"h3\">{`: config): Persistence`}</inlineCode></h3>\n    <p>{`Constructor to create a new `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance. It takes a `}<a parentName=\"p\" {...{\n        \"href\": \"#persistenceconfig\"\n      }}><inlineCode parentName=\"a\">{`PersistenceConfig`}</inlineCode></a>{` object as parameter\nto configure the instance.`}</p>\n    <p>{`No further initialization steps are executed. To initialize our instance, use the `}<inlineCode parentName=\"p\">{`Persistence::initialize`}</inlineCode>{` method.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Persistence from '@harmonyjs/persistence'\n\n// Initialize a new Persistence instance\nconst persistence = new Persistence({\n    models: [...],\n})\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistenceinitialize-promiseboolean\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::initialize(): Promise<boolean>`}</inlineCode></h3>\n    <p>{`Initialization function computing our models and setting up our database accessors.`}</p>\n    <p>{`This functions returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` which resolves when the accessors are done loading.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Persistence from '@harmonyjs/persistence'\n\nasync function run() {\n    // Initialize a new Persistence instance\n    const persistence = new Persistence({\n        models: [...],\n    })\n\n    console.log('Initializing the Persistence instance...')\n\n    // Start our Persistence instance\n    await persistence.initialize()\n\n    console.log('Persistence instance initialized!')\n}\n\nrun()\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistencecontrollers\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::controllers`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Persistence::controllers`}</inlineCode>{` getter exposes two ready-to-use Controllers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controllers.ControllerGraphQL`}</inlineCode>{` can be used to expose a GraphQL endpoint configured with the Persistence instance schema.\nIts constructor accepts one `}<inlineCode parentName=\"li\">{`configuration`}</inlineCode>{` argument, of the following type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type ControllerGraphQLConfig = {\n    path: string, // The route on which to expose the GraphQL endpoint\n    enablePlayground: boolean, // Whether to enable the GraphQL Playground page on the endpoint\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controllers.ControllerEvents`}</inlineCode>{` can be used to forward our data events to the application's Socket.IO layer. It doesn't require\nany configuration.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"persistenceconfig\"\n    }}><inlineCode parentName=\"h2\">{`PersistenceConfig`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`PersistenceConfig`}</inlineCode>{` object configures a `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance. Here are the various parameters available:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type PersistenceConfig = {\n  models: Model[],\n  accessors?: {[key: string]: Accessor},\n  defaultAccessor?: string,\n  strict?: boolean,\n  log?: LogConfig,\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistenceconfigmodels\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::models`}</inlineCode></h3>\n    <p>{`The mandatory `}<inlineCode parentName=\"p\">{`models`}</inlineCode>{` field is an array of data-models. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{` definition to learn more about models.`}</p>\n    <p>{`This field contains the list of all models to expose in the Persistence schema.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigaccessors\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::accessors`}</inlineCode></h3>\n    <p>{`This optional field allows to give a mapping of `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{`. Each accessor has a unique key in the map,\nwhich can later be used to identify a `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{`'s accessor.`}</p>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{` documentation to learn more.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigdefaultaccessor\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::defaultAccessor`}</inlineCode></h3>\n    <p>{`Key of the accessor to use when no accessor is specified for a model. If not provided, defaults to the first accessor in the map.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigstrict\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::strict`}</inlineCode></h3>\n    <p>{`Whether to compile a schema in strict mode. When using strict mode, only CRUD actions for which a `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` function has been provided\nwill be added to the schema. To learn more about `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` functions, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{` documentation.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfiglog\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::log`}</inlineCode></h3>\n    <p>{`Configuration of the way the persistence instance logs its actions. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/api/utils#logconfig\"\n      }}>{`Log util documentation`}</a></p>\n    <h2 {...{\n      \"id\": \"model\"\n    }}><inlineCode parentName=\"h2\">{`Model`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{` type is used to describe a collection of objects to store in a database. HarmonyJS provides a unified way to\ndescribe such a model, that can later be translated to fit any storage mechanism. This translation is the role of the `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{` plugins.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{` type is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type Model = {\n  name: string,\n  schema: {\n    [key: string]: Property\n  },\n\n  computed?: Computed,\n  scopes?: Scopes,\n\n  accessor?: string,\n  external?: boolean,\n}\n`}</code></pre>\n    <p>{`Only two properties are required: `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`schema`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` property is the name of the collection. This should be a singular noun. `}<br />{`\nIf it needs to be a composed word, use kebab case: `}<inlineCode parentName=\"li\">{`'my-multiple-words-name'`}</inlineCode></li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`schema`}</inlineCode>{` property is an object defining the base form of our collection. It maps each field name to a `}<a parentName=\"li\" {...{\n          \"href\": \"#propertyandtypes\"\n        }}><inlineCode parentName=\"a\">{`Property`}</inlineCode></a>{`\ndefinition, which is declared using HarmonyJS's `}<a parentName=\"li\" {...{\n          \"href\": \"#propertyandtypes\"\n        }}><inlineCode parentName=\"a\">{`Types`}</inlineCode></a>{`. You can see a sample `}<inlineCode parentName=\"li\">{`schema`}</inlineCode>{` in the `}<a parentName=\"li\" {...{\n          \"href\": \"/guides/creating-models\"\n        }}><inlineCode parentName=\"a\">{`Model`}</inlineCode>{` guide`}</a>{`.`}</li>\n    </ul>\n    <br />\n    <p>{`The next two properties are optional and allows us to extend the capabilities of our model: `}<inlineCode parentName=\"p\">{`computed`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`scopes`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`computed`}</inlineCode>{` property describes fields that appear when reading an element from the API. Those fields are not actually stored\nin the database: they are `}<em parentName=\"li\">{`computed`}</em>{` at read-time by combining database fields. `}<br />{`\nThe `}<inlineCode parentName=\"li\">{`computed`}</inlineCode>{` property is also the occasion to define custom queries linked to our model. Refer to the `}<a parentName=\"li\" {...{\n          \"href\": \"#computed\"\n        }}><inlineCode parentName=\"a\">{`Computed`}</inlineCode></a>{` type definition\nfor more information.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`scopes`}</inlineCode>{` property helps us customize CRUD calls to our model. For each model, HarmonyJS creates default resolvers for common CRUD actions (read, list, count, create, update, delete). `}<br />{`\nFor each action, a `}<inlineCode parentName=\"li\">{`scope`}</inlineCode>{` function can be defined in order to access the query's argument so that we can edit them, inject some context, or\neven block certain accesses. `}<br />{`\nFor more information about `}<inlineCode parentName=\"li\">{`scope`}</inlineCode>{` functions, refer to the `}<a parentName=\"li\" {...{\n          \"href\": \"#scopes\"\n        }}><inlineCode parentName=\"a\">{`Scopes`}</inlineCode></a>{` type definition.`}</li>\n    </ul>\n    <br />\n    <p>{`Finally, the two last optional properties, `}<inlineCode parentName=\"p\">{`accessor`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`external`}</inlineCode>{`, are parameters to let HarmonyJS know how to handle certain aspect\nof the model lifecycle.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`accessor`}</inlineCode>{` property is an optional string that can contain the key of an `}<inlineCode parentName=\"li\">{`Accessor`}</inlineCode>{` as defined in the `}<a parentName=\"li\" {...{\n          \"href\": \"#persistenceconfigaccessors\"\n        }}><inlineCode parentName=\"a\">{`PersistenceConfig::accessors`}</inlineCode></a>{` field. This tells\nHarmonyJS Persistence which accessor to use for this model.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`external`}</inlineCode>{` boolean is an advanced field only needed when using `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.apollographql.com/docs/apollo-server/federation/introduction/\"\n        }}>{`Apollo Federation`}</a>{`.\nIt tells the GraphQL schema compiler that the given model is external, provided by another federated service.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"property-and-types\"\n    }}><inlineCode parentName=\"h3\">{`Property`}</inlineCode>{` and `}<inlineCode parentName=\"h3\">{`Types`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Property`}</inlineCode>{` type is used to describe a Harmony model. In order to create a correctly formed `}<inlineCode parentName=\"p\">{`Property`}</inlineCode>{`, we use the `}<inlineCode parentName=\"p\">{`Types`}</inlineCode>{` object\nexported by `}<inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{`.`}</p>\n    <p>{`The various `}<inlineCode parentName=\"p\">{`Types`}</inlineCode>{` properties allow to create a new `}<inlineCode parentName=\"p\">{`Property`}</inlineCode>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.String`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing a string field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.Number`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing an integer number field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.Float`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing a floating number field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.Boolean`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing a boolean field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.Date`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing a date field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.ID`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing an ID field.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.Array`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing an array. Use the `}<inlineCode parentName=\"li\">{`Property::of`}</inlineCode>{` chaining parameter to set the `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` of which the array is made of.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.Reference`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing a field referencing another model element. Use the `}<inlineCode parentName=\"li\">{`Property::of`}</inlineCode>{` chaining parameter to set the referenced model by name.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Types.JSON`}</inlineCode>{`: create a `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{` describing a field holding a custom JSON object. No validation is done inside the JSON object,\nsince its schema is not defined.`}</li>\n    </ul>\n    <br />\n    <p><inlineCode parentName=\"p\">{`Properties`}</inlineCode>{` generated can be configured using a set of chaining parameters, which mutates the `}<inlineCode parentName=\"p\">{`Property`}</inlineCode>{` and then returns it. The various\nchaining parameters are as follow:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Property::of`}</inlineCode>{`: used for `}<inlineCode parentName=\"li\">{`Types.Array`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`Types.Reference`}</inlineCode>{` to set what the array is made of, or the referenced model. `}<br />{`\nIn the case of an array, it takes another `}<inlineCode parentName=\"li\">{`Property`}</inlineCode>{`. In the case of a reference, it takes a `}<inlineCode parentName=\"li\">{`Model`}</inlineCode>{` either by name (`}<inlineCode parentName=\"li\">{`string`}</inlineCode>{`), or directly as a `}<inlineCode parentName=\"li\">{`Model`}</inlineCode>{` object.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Property::indexed`}</inlineCode>{`: tells HarmonyJS that our field should result in an index creation.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Property::unique`}</inlineCode>{`: tells HarmonyJS that our field should result in a `}<em parentName=\"li\">{`unique`}</em>{` index creation.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Property::required`}</inlineCode>{`: tells HarmonyJS that our field is required for each write operation.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Property::external`}</inlineCode>{`: used in the case of a federated system. Tells that a given field is an external field in a model definition. See `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.apollographql.com/docs/apollo-server/federation/introduction/\"\n        }}>{`Apollo Federation`}</a>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"computed\"\n    }}><inlineCode parentName=\"h3\">{`Computed`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`computed`}</inlineCode>{` field of a model allows us to extend the capabilities of our model by defining computed fields. It is only available\nwhen using the GraphQL schema system.`}</p>\n    <p>{`Its composition is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type Computed = {\n  fields: {\n    [key: string]: Field\n  },\n  queries: {\n    [key: string]: ExtendableField\n  },\n  mutations: {\n    [key: string]: ExtendableField\n  },\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`computed`}</inlineCode>{` fields is composed of three subfields: `}<inlineCode parentName=\"p\">{`fields`}</inlineCode>{`, which describes fields to add to our model; `}<inlineCode parentName=\"p\">{`queries`}</inlineCode>{`, which\ndescribes GraphQL queries linked to our model; and `}<inlineCode parentName=\"p\">{`mutations`}</inlineCode>{`, which describes GraphQL mutations linked to our model.`}</p>\n    <p>{`Each of these three subfields implement a map of `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` (or variant `}<inlineCode parentName=\"p\">{`ExtendableField`}</inlineCode>{`) by their name. The `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ExtendableField`}</inlineCode>{` type definitions are shown below.`}</p>\n    <h4 {...{\n      \"id\": \"field\"\n    }}><inlineCode parentName=\"h4\">{`Field`}</inlineCode></h4>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` is composed of the following properties:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type Field {\n  resolve: ({ args: Object, source: Object, resolvers: Resolver[], context: any }) => any\n  type?: PropertySchema | Property\n  args?: PropertySchema,\n  mode?: FieldModeEnum | FieldModeEnum[]\n}\n`}</code></pre>\n    <p>{`At its core, a `}<inlineCode parentName=\"p\">{`Field`}</inlineCode>{` needs a `}<inlineCode parentName=\"p\">{`resolve`}</inlineCode>{` function, which tells GraphQL how to compute its value.\nIt then needs either an `}<inlineCode parentName=\"p\">{`extends`}</inlineCode>{` field (only available for `}<inlineCode parentName=\"p\">{`queries`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`mutations`}</inlineCode>{`), or a `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` field.`}</p>\n    <h3 {...{\n      \"id\": \"scopes\"\n    }}><inlineCode parentName=\"h3\">{`Scopes`}</inlineCode></h3>\n    <h2 {...{\n      \"id\": \"other-exports\"\n    }}>{`Other exports`}</h2>\n    <h3 {...{\n      \"id\": \"fieldmode\"\n    }}>{`FieldMode`}</h3>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}