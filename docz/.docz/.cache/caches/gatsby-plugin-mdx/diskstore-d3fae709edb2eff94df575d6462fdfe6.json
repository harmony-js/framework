{"expireTime":9007200832273744000,"key":"gatsby-plugin-mdx-entire-payload-20540b73e827b730293ee959446f36c6-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"HarmonyJS Server","position":{"start":{"line":8,"column":3,"offset":170},"end":{"line":8,"column":19,"offset":186},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":8,"column":19,"offset":186},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/server","position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":20,"offset":207},"indent":[]}},{"type":"text","value":" handles the creation and runtime of a Node webserver. Under the hood, it uses HapiJS, but there is no\nneed to know HapiJS in order to start using HarmonyJS.","position":{"start":{"line":10,"column":20,"offset":207},"end":{"line":11,"column":55,"offset":364},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":11,"column":55,"offset":364},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":4,"offset":369},"end":{"line":13,"column":9,"offset":374},"indent":[]}}],"position":{"start":{"line":13,"column":2,"offset":367},"end":{"line":13,"column":11,"offset":376},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":13,"column":11,"offset":376},"end":{"line":13,"column":12,"offset":377},"indent":[]}},{"type":"link","title":null,"url":"https://hapi.dev/","children":[{"type":"text","value":"HapiJS","position":{"start":{"line":13,"column":13,"offset":378},"end":{"line":13,"column":19,"offset":384},"indent":[]}}],"position":{"start":{"line":13,"column":12,"offset":377},"end":{"line":13,"column":39,"offset":404},"indent":[]}},{"type":"text","value":" knowledge is necessary to write your own ","position":{"start":{"line":13,"column":39,"offset":404},"end":{"line":13,"column":81,"offset":446},"indent":[]}},{"type":"link","title":null,"url":"/plugins/controllers","children":[{"type":"text","value":"Controller Plugins","position":{"start":{"line":13,"column":82,"offset":447},"end":{"line":13,"column":100,"offset":465},"indent":[]}}],"position":{"start":{"line":13,"column":81,"offset":446},"end":{"line":13,"column":123,"offset":488},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":366},"end":{"line":13,"column":124,"offset":489},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":366},"end":{"line":13,"column":124,"offset":489},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":15,"column":1,"offset":491},"end":{"line":15,"column":7,"offset":497},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Server","position":{"start":{"line":17,"column":4,"offset":502},"end":{"line":17,"column":12,"offset":510},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":499},"end":{"line":17,"column":12,"offset":510},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/server","position":{"start":{"line":19,"column":1,"offset":512},"end":{"line":19,"column":20,"offset":531},"indent":[]}},{"type":"text","value":" only exports one element, its default export: the ","position":{"start":{"line":19,"column":20,"offset":531},"end":{"line":19,"column":71,"offset":582},"indent":[]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":19,"column":71,"offset":582},"end":{"line":19,"column":79,"offset":590},"indent":[]}},{"type":"text","value":" constructor.","position":{"start":{"line":19,"column":79,"offset":590},"end":{"line":19,"column":92,"offset":603},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":512},"end":{"line":19,"column":92,"offset":603},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This constructor allows us to create a ","position":{"start":{"line":21,"column":1,"offset":605},"end":{"line":21,"column":40,"offset":644},"indent":[]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":21,"column":40,"offset":644},"end":{"line":21,"column":48,"offset":652},"indent":[]}},{"type":"text","value":" instance, which can be configured to expose our application's webserver.\nA ","position":{"start":{"line":21,"column":48,"offset":652},"end":{"line":22,"column":3,"offset":728},"indent":[1]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":22,"column":3,"offset":728},"end":{"line":22,"column":11,"offset":736},"indent":[]}},{"type":"text","value":" instance only has two publicly available methods: the constructor itself, and a ","position":{"start":{"line":22,"column":11,"offset":736},"end":{"line":22,"column":92,"offset":817},"indent":[]}},{"type":"inlineCode","value":"start","position":{"start":{"line":22,"column":92,"offset":817},"end":{"line":22,"column":99,"offset":824},"indent":[]}},{"type":"text","value":" function.","position":{"start":{"line":22,"column":99,"offset":824},"end":{"line":22,"column":109,"offset":834},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":605},"end":{"line":22,"column":109,"offset":834},"indent":[1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":24,"column":1,"offset":836},"end":{"line":24,"column":7,"offset":842},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Server::new(","position":{"start":{"line":26,"column":5,"offset":848},"end":{"line":26,"column":19,"offset":862},"indent":[]}},{"type":"link","title":null,"url":"#serverconfig","children":[{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":26,"column":20,"offset":863},"end":{"line":26,"column":34,"offset":877},"indent":[]}}],"position":{"start":{"line":26,"column":19,"offset":862},"end":{"line":26,"column":50,"offset":893},"indent":[]}},{"type":"inlineCode","value":": config): Server","position":{"start":{"line":26,"column":50,"offset":893},"end":{"line":26,"column":69,"offset":912},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":844},"end":{"line":26,"column":69,"offset":912},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Constructor to create a new ","position":{"start":{"line":28,"column":1,"offset":914},"end":{"line":28,"column":29,"offset":942},"indent":[]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":28,"column":29,"offset":942},"end":{"line":28,"column":37,"offset":950},"indent":[]}},{"type":"text","value":" instance. It takes a ","position":{"start":{"line":28,"column":37,"offset":950},"end":{"line":28,"column":59,"offset":972},"indent":[]}},{"type":"link","title":null,"url":"#serverconfig","children":[{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":28,"column":60,"offset":973},"end":{"line":28,"column":74,"offset":987},"indent":[]}}],"position":{"start":{"line":28,"column":59,"offset":972},"end":{"line":28,"column":90,"offset":1003},"indent":[]}},{"type":"text","value":" object as parameter\nto configure the instance.","position":{"start":{"line":28,"column":90,"offset":1003},"end":{"line":29,"column":27,"offset":1050},"indent":[1]}}],"position":{"start":{"line":28,"column":1,"offset":914},"end":{"line":29,"column":27,"offset":1050},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"No further initialization steps are executed. To launch the server, use the ","position":{"start":{"line":31,"column":1,"offset":1052},"end":{"line":31,"column":77,"offset":1128},"indent":[]}},{"type":"inlineCode","value":"Server::start","position":{"start":{"line":31,"column":77,"offset":1128},"end":{"line":31,"column":92,"offset":1143},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":31,"column":92,"offset":1143},"end":{"line":31,"column":100,"offset":1151},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1052},"end":{"line":31,"column":100,"offset":1151},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":33,"column":1,"offset":1153},"end":{"line":33,"column":73,"offset":1225},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Server from '@harmonyjs/server'\n\n// Initialize a new Server instance\nconst server = new Server({\n    endpoint: {\n        host: '0.0.0.0',\n        port: 80,\n    },\n})","position":{"start":{"line":35,"column":1,"offset":1227},"end":{"line":45,"column":4,"offset":1409},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":47,"column":1,"offset":1411},"end":{"line":47,"column":7,"offset":1417},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Server::start(): Promise<boolean>","position":{"start":{"line":49,"column":5,"offset":1423},"end":{"line":49,"column":40,"offset":1458},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1419},"end":{"line":49,"column":40,"offset":1458},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initialization function launching the webserver.","position":{"start":{"line":51,"column":1,"offset":1460},"end":{"line":51,"column":49,"offset":1508},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1460},"end":{"line":51,"column":49,"offset":1508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function returns a ","position":{"start":{"line":53,"column":1,"offset":1510},"end":{"line":53,"column":25,"offset":1534},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":53,"column":25,"offset":1534},"end":{"line":53,"column":34,"offset":1543},"indent":[]}},{"type":"text","value":" which resolves when the server is done loading.","position":{"start":{"line":53,"column":34,"offset":1543},"end":{"line":53,"column":82,"offset":1591},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1510},"end":{"line":53,"column":82,"offset":1591},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":55,"column":1,"offset":1593},"end":{"line":55,"column":73,"offset":1665},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Server from '@harmonyjs/server'\n\n// Initialize a new Server instance\nconst server = new Server({\n    endpoint: {\n        host: '0.0.0.0',\n        port: 80,\n    },\n})\n\nconsole.log('Launching the server...')\n\n// Start our server\nserver.start()\n    .then(() => {\n        console.log('Server launched!')\n    })\n    .catch((err) => {\n        console.log('An error occurred while launching the server')\n        console.error(err)\n    })","position":{"start":{"line":57,"column":1,"offset":1667},"end":{"line":79,"column":4,"offset":2114},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":81,"column":1,"offset":2116},"end":{"line":81,"column":7,"offset":2122},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":83,"column":4,"offset":2127},"end":{"line":83,"column":18,"offset":2141},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2124},"end":{"line":83,"column":18,"offset":2141},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":85,"column":1,"offset":2143},"end":{"line":85,"column":5,"offset":2147},"indent":[]}},{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":85,"column":5,"offset":2147},"end":{"line":85,"column":19,"offset":2161},"indent":[]}},{"type":"text","value":" object allows us to configure the server before running it. Here are the available options:","position":{"start":{"line":85,"column":19,"offset":2161},"end":{"line":85,"column":111,"offset":2253},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2143},"end":{"line":85,"column":111,"offset":2253},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type ServerConfig = {\n  endpoint?: {\n    host: string,\n    port: number,\n  },\n  authentication?: {\n    secret: string,\n    validate?: (any) => Promise<boolean>,\n  },\n  cluster?: {\n    forks?: {\n      size?: number,\n      header?: string,\n      proxy?: boolean,\n    },\n    redis: boolean | {\n      key?: string,\n      host?: string,\n      port?: number,\n    },\n  },\n  controllers?: Controller[],\n  log?: LogConfig,\n}","position":{"start":{"line":87,"column":1,"offset":2255},"end":{"line":112,"column":4,"offset":2680},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":114,"column":1,"offset":2682},"end":{"line":114,"column":7,"offset":2688},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::endpoint","position":{"start":{"line":116,"column":5,"offset":2694},"end":{"line":116,"column":29,"offset":2718},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2690},"end":{"line":116,"column":29,"offset":2718},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The optional endpoint field allows us to choose the host and port to run or server on. Omitting this field will launch\na server on ","position":{"start":{"line":118,"column":1,"offset":2720},"end":{"line":119,"column":13,"offset":2851},"indent":[1]}},{"type":"inlineCode","value":"localhost:3000","position":{"start":{"line":119,"column":13,"offset":2851},"end":{"line":119,"column":29,"offset":2867},"indent":[]}},{"type":"text","value":" by default.","position":{"start":{"line":119,"column":29,"offset":2867},"end":{"line":119,"column":41,"offset":2879},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":2720},"end":{"line":119,"column":41,"offset":2879},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"This field takes two subfields, ","position":{"start":{"line":121,"column":1,"offset":2881},"end":{"line":121,"column":33,"offset":2913},"indent":[]}},{"type":"inlineCode","value":"endpoint.host","position":{"start":{"line":121,"column":33,"offset":2913},"end":{"line":121,"column":48,"offset":2928},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":121,"column":48,"offset":2928},"end":{"line":121,"column":53,"offset":2933},"indent":[]}},{"type":"inlineCode","value":"endpoint.port","position":{"start":{"line":121,"column":53,"offset":2933},"end":{"line":121,"column":68,"offset":2948},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2881},"end":{"line":121,"column":68,"offset":2948},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":123,"column":1,"offset":2950},"end":{"line":123,"column":7,"offset":2956},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::authentication","position":{"start":{"line":125,"column":5,"offset":2962},"end":{"line":125,"column":35,"offset":2992},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":2958},"end":{"line":125,"column":35,"offset":2992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This optional field handles the built-in JWT-authentication scheme. It has two subfields: ","position":{"start":{"line":127,"column":1,"offset":2994},"end":{"line":127,"column":91,"offset":3084},"indent":[]}},{"type":"inlineCode","value":"authentication.secret","position":{"start":{"line":127,"column":91,"offset":3084},"end":{"line":127,"column":114,"offset":3107},"indent":[]}},{"type":"text","value":", the\nsecret to use to sign the JWT tokens emitted from the application, and ","position":{"start":{"line":127,"column":114,"offset":3107},"end":{"line":128,"column":72,"offset":3184},"indent":[1]}},{"type":"inlineCode","value":"authentication.validate","position":{"start":{"line":128,"column":72,"offset":3184},"end":{"line":128,"column":97,"offset":3209},"indent":[]}},{"type":"text","value":", an optional function\nwhich receives the decoded token before each requests and returns a ","position":{"start":{"line":128,"column":97,"offset":3209},"end":{"line":129,"column":69,"offset":3300},"indent":[1]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":129,"column":69,"offset":3300},"end":{"line":129,"column":78,"offset":3309},"indent":[]}},{"type":"text","value":" resolving to ","position":{"start":{"line":129,"column":78,"offset":3309},"end":{"line":129,"column":92,"offset":3323},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":129,"column":92,"offset":3323},"end":{"line":129,"column":98,"offset":3329},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":129,"column":98,"offset":3329},"end":{"line":129,"column":102,"offset":3333},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":129,"column":102,"offset":3333},"end":{"line":129,"column":109,"offset":3340},"indent":[]}},{"type":"text","value":" to indicate\nwhether the token is considered valid or not.","position":{"start":{"line":129,"column":109,"offset":3340},"end":{"line":130,"column":46,"offset":3398},"indent":[1]}}],"position":{"start":{"line":127,"column":1,"offset":2994},"end":{"line":130,"column":46,"offset":3398},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":132,"column":4,"offset":3403},"end":{"line":132,"column":9,"offset":3408},"indent":[]}}],"position":{"start":{"line":132,"column":2,"offset":3401},"end":{"line":132,"column":11,"offset":3410},"indent":[]}},{"type":"text","value":" the ","position":{"start":{"line":132,"column":11,"offset":3410},"end":{"line":132,"column":16,"offset":3415},"indent":[]}},{"type":"inlineCode","value":"validate","position":{"start":{"line":132,"column":16,"offset":3415},"end":{"line":132,"column":26,"offset":3425},"indent":[]}},{"type":"text","value":" function is the responsibility of the application and arrives","position":{"start":{"line":132,"column":26,"offset":3425},"end":{"line":132,"column":88,"offset":3487},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3400},"end":{"line":132,"column":89,"offset":3488},"indent":[]}},{"type":"text","value":" after ","position":{"start":{"line":132,"column":89,"offset":3488},"end":{"line":132,"column":96,"offset":3495},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the signature check","position":{"start":{"line":132,"column":97,"offset":3496},"end":{"line":132,"column":116,"offset":3515},"indent":[]}}],"position":{"start":{"line":132,"column":96,"offset":3495},"end":{"line":132,"column":117,"offset":3516},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3400},"end":{"line":132,"column":117,"offset":3516},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":134,"column":1,"offset":3518},"end":{"line":134,"column":7,"offset":3524},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::cluster","position":{"start":{"line":136,"column":5,"offset":3530},"end":{"line":136,"column":28,"offset":3553},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":3526},"end":{"line":136,"column":28,"offset":3553},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The cluster configuration define how the app should handle replication, either locally using Node's forking system, or\nacross multiple machines such as in a Kubernetes environment.","position":{"start":{"line":138,"column":1,"offset":3555},"end":{"line":139,"column":62,"offset":3735},"indent":[1]}}],"position":{"start":{"line":138,"column":1,"offset":3555},"end":{"line":139,"column":62,"offset":3735},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"ServerConfig::cluster::forks","position":{"start":{"line":141,"column":6,"offset":3742},"end":{"line":141,"column":36,"offset":3772},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":3737},"end":{"line":141,"column":36,"offset":3772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":143,"column":1,"offset":3774},"end":{"line":143,"column":5,"offset":3778},"indent":[]}},{"type":"inlineCode","value":"cluster.forks","position":{"start":{"line":143,"column":5,"offset":3778},"end":{"line":143,"column":20,"offset":3793},"indent":[]}},{"type":"text","value":" subfield allows to configure how our application should split across multiple forks.","position":{"start":{"line":143,"column":20,"offset":3793},"end":{"line":143,"column":105,"offset":3878},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":3774},"end":{"line":143,"column":105,"offset":3878},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Under the hood, HarmonyJS uses Socket.IO for client->server communication. Forks parameters allow to insure a socket connection\nis always forwarded to the correct server.","position":{"start":{"line":145,"column":1,"offset":3880},"end":{"line":146,"column":43,"offset":4050},"indent":[1]}}],"position":{"start":{"line":145,"column":1,"offset":3880},"end":{"line":146,"column":43,"offset":4050},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"It takes three optional parameters:","position":{"start":{"line":148,"column":1,"offset":4052},"end":{"line":148,"column":36,"offset":4087},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":4052},"end":{"line":148,"column":36,"offset":4087},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"size","position":{"start":{"line":150,"column":3,"offset":4091},"end":{"line":150,"column":9,"offset":4097},"indent":[]}},{"type":"text","value":": the number of instances to run. If lower than 2, then no forks are created. Defaults to ","position":{"start":{"line":150,"column":9,"offset":4097},"end":{"line":150,"column":99,"offset":4187},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":150,"column":99,"offset":4187},"end":{"line":150,"column":102,"offset":4190},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":150,"column":102,"offset":4190},"end":{"line":150,"column":103,"offset":4191},"indent":[]}}],"position":{"start":{"line":150,"column":3,"offset":4091},"end":{"line":150,"column":103,"offset":4191},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4089},"end":{"line":150,"column":103,"offset":4191},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"header","position":{"start":{"line":151,"column":3,"offset":4194},"end":{"line":151,"column":11,"offset":4202},"indent":[]}},{"type":"text","value":": the header containing the real user IP address. Useful if used behind a proxy. Defaults to ","position":{"start":{"line":151,"column":11,"offset":4202},"end":{"line":151,"column":104,"offset":4295},"indent":[]}},{"type":"inlineCode","value":"'x-forwarded-for'","position":{"start":{"line":151,"column":104,"offset":4295},"end":{"line":151,"column":123,"offset":4314},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":151,"column":123,"offset":4314},"end":{"line":151,"column":124,"offset":4315},"indent":[]}}],"position":{"start":{"line":151,"column":3,"offset":4194},"end":{"line":151,"column":124,"offset":4315},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":4192},"end":{"line":151,"column":124,"offset":4315},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"proxy","position":{"start":{"line":152,"column":3,"offset":4318},"end":{"line":152,"column":10,"offset":4325},"indent":[]}},{"type":"text","value":": tells if the application is running behind a proxy. Defaults to ","position":{"start":{"line":152,"column":10,"offset":4325},"end":{"line":152,"column":76,"offset":4391},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":152,"column":76,"offset":4391},"end":{"line":152,"column":83,"offset":4398},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":152,"column":83,"offset":4398},"end":{"line":152,"column":84,"offset":4399},"indent":[]}}],"position":{"start":{"line":152,"column":3,"offset":4318},"end":{"line":152,"column":84,"offset":4399},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":4316},"end":{"line":152,"column":84,"offset":4399},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4089},"end":{"line":152,"column":84,"offset":4399},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"ServerConfig::cluster::redis","position":{"start":{"line":154,"column":6,"offset":4406},"end":{"line":154,"column":36,"offset":4436},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":4401},"end":{"line":154,"column":36,"offset":4436},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":156,"column":1,"offset":4438},"end":{"line":156,"column":5,"offset":4442},"indent":[]}},{"type":"inlineCode","value":"cluster.redis","position":{"start":{"line":156,"column":5,"offset":4442},"end":{"line":156,"column":20,"offset":4457},"indent":[]}},{"type":"text","value":" subfield allows to configure our application for working on a clustered environment, such as Kubernetes.","position":{"start":{"line":156,"column":20,"offset":4457},"end":{"line":156,"column":125,"offset":4562},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":4438},"end":{"line":156,"column":125,"offset":4562},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Under the hood, HarmonyJS uses Socket.IO for client->server communication. Redis parameters allow to insure that messages\nare spread to all clients, whichever the emitting server, and vice-versa.","position":{"start":{"line":158,"column":1,"offset":4564},"end":{"line":159,"column":74,"offset":4759},"indent":[1]}}],"position":{"start":{"line":158,"column":1,"offset":4564},"end":{"line":159,"column":74,"offset":4759},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"It takes three optional parameters:","position":{"start":{"line":161,"column":1,"offset":4761},"end":{"line":161,"column":36,"offset":4796},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":4761},"end":{"line":161,"column":36,"offset":4796},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"key","position":{"start":{"line":163,"column":3,"offset":4800},"end":{"line":163,"column":8,"offset":4805},"indent":[]}},{"type":"text","value":": the identifier of the Redis sync cache. Defaults to ","position":{"start":{"line":163,"column":8,"offset":4805},"end":{"line":163,"column":62,"offset":4859},"indent":[]}},{"type":"inlineCode","value":"'harmony'","position":{"start":{"line":163,"column":62,"offset":4859},"end":{"line":163,"column":73,"offset":4870},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":163,"column":73,"offset":4870},"end":{"line":163,"column":75,"offset":4872},"indent":[]}},{"type":"jsx","value":"<br/>","position":{"start":{"line":163,"column":75,"offset":4872},"end":{"line":163,"column":80,"offset":4877},"indent":[]}},{"type":"text","value":"\nUse this key if you intend to run multiple HarmonyJS applications on the same cluster or using the same Redis server.","position":{"start":{"line":163,"column":80,"offset":4877},"end":{"line":164,"column":118,"offset":4995},"indent":[1]}}],"position":{"start":{"line":163,"column":3,"offset":4800},"end":{"line":164,"column":118,"offset":4995},"indent":[1]}}],"position":{"start":{"line":163,"column":1,"offset":4798},"end":{"line":164,"column":118,"offset":4995},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"host","position":{"start":{"line":165,"column":3,"offset":4998},"end":{"line":165,"column":9,"offset":5004},"indent":[]}},{"type":"text","value":": the hostname on which to access the Redis server. Defaults to ","position":{"start":{"line":165,"column":9,"offset":5004},"end":{"line":165,"column":73,"offset":5068},"indent":[]}},{"type":"inlineCode","value":"'localhost'","position":{"start":{"line":165,"column":73,"offset":5068},"end":{"line":165,"column":86,"offset":5081},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":165,"column":86,"offset":5081},"end":{"line":165,"column":87,"offset":5082},"indent":[]}}],"position":{"start":{"line":165,"column":3,"offset":4998},"end":{"line":165,"column":87,"offset":5082},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":4996},"end":{"line":165,"column":87,"offset":5082},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"port","position":{"start":{"line":166,"column":3,"offset":5085},"end":{"line":166,"column":9,"offset":5091},"indent":[]}},{"type":"text","value":": the port on which the Redis server is running. Defaults to ","position":{"start":{"line":166,"column":9,"offset":5091},"end":{"line":166,"column":70,"offset":5152},"indent":[]}},{"type":"inlineCode","value":"6379","position":{"start":{"line":166,"column":70,"offset":5152},"end":{"line":166,"column":76,"offset":5158},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":166,"column":76,"offset":5158},"end":{"line":166,"column":77,"offset":5159},"indent":[]}}],"position":{"start":{"line":166,"column":3,"offset":5085},"end":{"line":166,"column":77,"offset":5159},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5083},"end":{"line":166,"column":77,"offset":5159},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":4798},"end":{"line":166,"column":77,"offset":5159},"indent":[1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":168,"column":1,"offset":5161},"end":{"line":168,"column":7,"offset":5167},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::controllers","position":{"start":{"line":170,"column":5,"offset":5173},"end":{"line":170,"column":32,"offset":5200},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":5169},"end":{"line":170,"column":32,"offset":5200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The controllers array contains a list of Controllers. Controllers are HarmonyJS plugins allowing to describe how to handle\nspecific routes, such as serving a static directory, routing to an SPA or exposing a GraphQL endpoint.","position":{"start":{"line":172,"column":1,"offset":5202},"end":{"line":173,"column":103,"offset":5427},"indent":[1]}}],"position":{"start":{"line":172,"column":1,"offset":5202},"end":{"line":173,"column":103,"offset":5427},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"To find more information about Controllers, refer to ","position":{"start":{"line":175,"column":1,"offset":5429},"end":{"line":175,"column":54,"offset":5482},"indent":[]}},{"type":"link","title":null,"url":"/plugins/controllers","children":[{"type":"text","value":"their documentation","position":{"start":{"line":175,"column":55,"offset":5483},"end":{"line":175,"column":74,"offset":5502},"indent":[]}}],"position":{"start":{"line":175,"column":54,"offset":5482},"end":{"line":175,"column":97,"offset":5525},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":175,"column":97,"offset":5525},"end":{"line":175,"column":98,"offset":5526},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":5429},"end":{"line":175,"column":98,"offset":5526},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":177,"column":1,"offset":5528},"end":{"line":177,"column":7,"offset":5534},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::log","position":{"start":{"line":179,"column":5,"offset":5540},"end":{"line":179,"column":24,"offset":5559},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":5536},"end":{"line":179,"column":24,"offset":5559},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Configuration of the way the server instance logs its actions. Refer to the ","position":{"start":{"line":181,"column":1,"offset":5561},"end":{"line":181,"column":77,"offset":5637},"indent":[]}},{"type":"link","title":null,"url":"/api/utils#logconfig","children":[{"type":"text","value":"Log util documentation","position":{"start":{"line":181,"column":78,"offset":5638},"end":{"line":181,"column":100,"offset":5660},"indent":[]}}],"position":{"start":{"line":181,"column":77,"offset":5637},"end":{"line":181,"column":123,"offset":5683},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":5561},"end":{"line":181,"column":123,"offset":5683},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":184,"column":1,"offset":5686},"end":{"line":184,"column":31,"offset":5716},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":184,"column":31,"offset":5716}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"harmonyjs-server\"\n    }}>{`HarmonyJS Server`}</h1>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/server`}</inlineCode>{` handles the creation and runtime of a Node webserver. Under the hood, it uses HapiJS, but there is no\nneed to know HapiJS in order to start using HarmonyJS.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` `}<a parentName=\"em\" {...{\n          \"href\": \"https://hapi.dev/\"\n        }}>{`HapiJS`}</a>{` knowledge is necessary to write your own `}<a parentName=\"em\" {...{\n          \"href\": \"/plugins/controllers\"\n        }}>{`Controller Plugins`}</a></em></p>\n    <br />\n    <h2 {...{\n      \"id\": \"server\"\n    }}><inlineCode parentName=\"h2\">{`Server`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/server`}</inlineCode>{` only exports one element, its default export: the `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` constructor.`}</p>\n    <p>{`This constructor allows us to create a `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` instance, which can be configured to expose our application's webserver.\nA `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` instance only has two publicly available methods: the constructor itself, and a `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` function.`}</p>\n    <br />\n    <h3 {...{\n      \"id\": \"servernewserverconfig-config-server\"\n    }}><inlineCode parentName=\"h3\">{`Server::new(`}</inlineCode><a parentName=\"h3\" {...{\n        \"href\": \"#serverconfig\"\n      }}><inlineCode parentName=\"a\">{`ServerConfig`}</inlineCode></a><inlineCode parentName=\"h3\">{`: config): Server`}</inlineCode></h3>\n    <p>{`Constructor to create a new `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` instance. It takes a `}<a parentName=\"p\" {...{\n        \"href\": \"#serverconfig\"\n      }}><inlineCode parentName=\"a\">{`ServerConfig`}</inlineCode></a>{` object as parameter\nto configure the instance.`}</p>\n    <p>{`No further initialization steps are executed. To launch the server, use the `}<inlineCode parentName=\"p\">{`Server::start`}</inlineCode>{` method.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Server from '@harmonyjs/server'\n\n// Initialize a new Server instance\nconst server = new Server({\n    endpoint: {\n        host: '0.0.0.0',\n        port: 80,\n    },\n})\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"serverstart-promiseboolean\"\n    }}><inlineCode parentName=\"h3\">{`Server::start(): Promise<boolean>`}</inlineCode></h3>\n    <p>{`Initialization function launching the webserver.`}</p>\n    <p>{`This function returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` which resolves when the server is done loading.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Server from '@harmonyjs/server'\n\n// Initialize a new Server instance\nconst server = new Server({\n    endpoint: {\n        host: '0.0.0.0',\n        port: 80,\n    },\n})\n\nconsole.log('Launching the server...')\n\n// Start our server\nserver.start()\n    .then(() => {\n        console.log('Server launched!')\n    })\n    .catch((err) => {\n        console.log('An error occurred while launching the server')\n        console.error(err)\n    })\n`}</code></pre>\n    <br />\n    <h2 {...{\n      \"id\": \"serverconfig\"\n    }}><inlineCode parentName=\"h2\">{`ServerConfig`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ServerConfig`}</inlineCode>{` object allows us to configure the server before running it. Here are the available options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type ServerConfig = {\n  endpoint?: {\n    host: string,\n    port: number,\n  },\n  authentication?: {\n    secret: string,\n    validate?: (any) => Promise<boolean>,\n  },\n  cluster?: {\n    forks?: {\n      size?: number,\n      header?: string,\n      proxy?: boolean,\n    },\n    redis: boolean | {\n      key?: string,\n      host?: string,\n      port?: number,\n    },\n  },\n  controllers?: Controller[],\n  log?: LogConfig,\n}\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"serverconfigendpoint\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::endpoint`}</inlineCode></h3>\n    <p>{`The optional endpoint field allows us to choose the host and port to run or server on. Omitting this field will launch\na server on `}<inlineCode parentName=\"p\">{`localhost:3000`}</inlineCode>{` by default.`}</p>\n    <p>{`This field takes two subfields, `}<inlineCode parentName=\"p\">{`endpoint.host`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`endpoint.port`}</inlineCode></p>\n    <br />\n    <h3 {...{\n      \"id\": \"serverconfigauthentication\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::authentication`}</inlineCode></h3>\n    <p>{`This optional field handles the built-in JWT-authentication scheme. It has two subfields: `}<inlineCode parentName=\"p\">{`authentication.secret`}</inlineCode>{`, the\nsecret to use to sign the JWT tokens emitted from the application, and `}<inlineCode parentName=\"p\">{`authentication.validate`}</inlineCode>{`, an optional function\nwhich receives the decoded token before each requests and returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` resolving to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` to indicate\nwhether the token is considered valid or not.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` the `}<inlineCode parentName=\"em\">{`validate`}</inlineCode>{` function is the responsibility of the application and arrives`}</em>{` after `}<em parentName=\"p\">{`the signature check`}</em></p>\n    <br />\n    <h3 {...{\n      \"id\": \"serverconfigcluster\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::cluster`}</inlineCode></h3>\n    <p>{`The cluster configuration define how the app should handle replication, either locally using Node's forking system, or\nacross multiple machines such as in a Kubernetes environment.`}</p>\n    <h4 {...{\n      \"id\": \"serverconfigclusterforks\"\n    }}><inlineCode parentName=\"h4\">{`ServerConfig::cluster::forks`}</inlineCode></h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cluster.forks`}</inlineCode>{` subfield allows to configure how our application should split across multiple forks.`}</p>\n    <p>{`Under the hood, HarmonyJS uses Socket.IO for client->server communication. Forks parameters allow to insure a socket connection\nis always forwarded to the correct server.`}</p>\n    <p>{`It takes three optional parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`size`}</inlineCode>{`: the number of instances to run. If lower than 2, then no forks are created. Defaults to `}<inlineCode parentName=\"li\">{`1`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header`}</inlineCode>{`: the header containing the real user IP address. Useful if used behind a proxy. Defaults to `}<inlineCode parentName=\"li\">{`'x-forwarded-for'`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`proxy`}</inlineCode>{`: tells if the application is running behind a proxy. Defaults to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"serverconfigclusterredis\"\n    }}><inlineCode parentName=\"h4\">{`ServerConfig::cluster::redis`}</inlineCode></h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cluster.redis`}</inlineCode>{` subfield allows to configure our application for working on a clustered environment, such as Kubernetes.`}</p>\n    <p>{`Under the hood, HarmonyJS uses Socket.IO for client->server communication. Redis parameters allow to insure that messages\nare spread to all clients, whichever the emitting server, and vice-versa.`}</p>\n    <p>{`It takes three optional parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`key`}</inlineCode>{`: the identifier of the Redis sync cache. Defaults to `}<inlineCode parentName=\"li\">{`'harmony'`}</inlineCode>{`. `}<br />{`\nUse this key if you intend to run multiple HarmonyJS applications on the same cluster or using the same Redis server.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`host`}</inlineCode>{`: the hostname on which to access the Redis server. Defaults to `}<inlineCode parentName=\"li\">{`'localhost'`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`port`}</inlineCode>{`: the port on which the Redis server is running. Defaults to `}<inlineCode parentName=\"li\">{`6379`}</inlineCode>{`.`}</li>\n    </ul>\n    <br />\n    <h3 {...{\n      \"id\": \"serverconfigcontrollers\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::controllers`}</inlineCode></h3>\n    <p>{`The controllers array contains a list of Controllers. Controllers are HarmonyJS plugins allowing to describe how to handle\nspecific routes, such as serving a static directory, routing to an SPA or exposing a GraphQL endpoint.`}</p>\n    <p>{`To find more information about Controllers, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/controllers\"\n      }}>{`their documentation`}</a>{`.`}</p>\n    <br />\n    <h3 {...{\n      \"id\": \"serverconfiglog\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::log`}</inlineCode></h3>\n    <p>{`Configuration of the way the server instance logs its actions. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/api/utils#logconfig\"\n      }}>{`Log util documentation`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}