{"expireTime":9007200832275716000,"key":"gatsby-plugin-mdx-entire-payload-349189f039ed4d10dc697fe0849447d8-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"HarmonyJS Persistence","position":{"start":{"line":8,"column":3,"offset":170},"end":{"line":8,"column":24,"offset":191},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":8,"column":24,"offset":191},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":10,"column":25,"offset":217},"indent":[]}},{"type":"text","value":" handles the data of our application. It provides a convenient way to describe our models, and\nconnect them to our databases through accessors.","position":{"start":{"line":10,"column":25,"offset":217},"end":{"line":11,"column":49,"offset":360},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":11,"column":49,"offset":360},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":4,"offset":365},"end":{"line":13,"column":9,"offset":370},"indent":[]}}],"position":{"start":{"line":13,"column":2,"offset":363},"end":{"line":13,"column":11,"offset":372},"indent":[]}},{"type":"text","value":" While not mandatory, ","position":{"start":{"line":13,"column":11,"offset":372},"end":{"line":13,"column":33,"offset":394},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.org/","children":[{"type":"text","value":"GraphQL","position":{"start":{"line":13,"column":34,"offset":395},"end":{"line":13,"column":41,"offset":402},"indent":[]}}],"position":{"start":{"line":13,"column":33,"offset":394},"end":{"line":13,"column":64,"offset":425},"indent":[]}},{"type":"text","value":" is the main target of the persistence module, and is needed","position":{"start":{"line":13,"column":64,"offset":425},"end":{"line":13,"column":124,"offset":485},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":362},"end":{"line":13,"column":125,"offset":486},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":125,"offset":486},"end":{"line":14,"column":1,"offset":487},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to take full advantage of HarmonyJS","position":{"start":{"line":14,"column":2,"offset":488},"end":{"line":14,"column":37,"offset":523},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":487},"end":{"line":14,"column":38,"offset":524},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":362},"end":{"line":14,"column":38,"offset":524},"indent":[1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":16,"column":1,"offset":526},"end":{"line":16,"column":7,"offset":532},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Persistence","position":{"start":{"line":18,"column":4,"offset":537},"end":{"line":18,"column":17,"offset":550},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":534},"end":{"line":18,"column":17,"offset":550},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":20,"column":1,"offset":552},"end":{"line":20,"column":25,"offset":576},"indent":[]}},{"type":"text","value":" default export is the ","position":{"start":{"line":20,"column":25,"offset":576},"end":{"line":20,"column":48,"offset":599},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":20,"column":48,"offset":599},"end":{"line":20,"column":61,"offset":612},"indent":[]}},{"type":"text","value":" constructor.","position":{"start":{"line":20,"column":61,"offset":612},"end":{"line":20,"column":74,"offset":625},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":552},"end":{"line":20,"column":74,"offset":625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This constructor allows us to create a ","position":{"start":{"line":22,"column":1,"offset":627},"end":{"line":22,"column":40,"offset":666},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":22,"column":40,"offset":666},"end":{"line":22,"column":53,"offset":679},"indent":[]}},{"type":"text","value":" instance, which can be configured to handle our database accesses.\nA ","position":{"start":{"line":22,"column":53,"offset":679},"end":{"line":23,"column":3,"offset":749},"indent":[1]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":23,"column":3,"offset":749},"end":{"line":23,"column":16,"offset":762},"indent":[]}},{"type":"text","value":" instance only has two publicly available methods: the constructor itself, and an ","position":{"start":{"line":23,"column":16,"offset":762},"end":{"line":23,"column":98,"offset":844},"indent":[]}},{"type":"inlineCode","value":"initialize","position":{"start":{"line":23,"column":98,"offset":844},"end":{"line":23,"column":110,"offset":856},"indent":[]}},{"type":"text","value":" function.","position":{"start":{"line":23,"column":110,"offset":856},"end":{"line":23,"column":120,"offset":866},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":627},"end":{"line":23,"column":120,"offset":866},"indent":[1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":25,"column":1,"offset":868},"end":{"line":25,"column":7,"offset":874},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::new(","position":{"start":{"line":27,"column":5,"offset":880},"end":{"line":27,"column":24,"offset":899},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfig","children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":27,"column":25,"offset":900},"end":{"line":27,"column":44,"offset":919},"indent":[]}}],"position":{"start":{"line":27,"column":24,"offset":899},"end":{"line":27,"column":65,"offset":940},"indent":[]}},{"type":"inlineCode","value":": config): Persistence","position":{"start":{"line":27,"column":65,"offset":940},"end":{"line":27,"column":89,"offset":964},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":876},"end":{"line":27,"column":89,"offset":964},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Constructor to create a new ","position":{"start":{"line":29,"column":1,"offset":966},"end":{"line":29,"column":29,"offset":994},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":29,"column":29,"offset":994},"end":{"line":29,"column":42,"offset":1007},"indent":[]}},{"type":"text","value":" instance. It takes a ","position":{"start":{"line":29,"column":42,"offset":1007},"end":{"line":29,"column":64,"offset":1029},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfig","children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":29,"column":65,"offset":1030},"end":{"line":29,"column":84,"offset":1049},"indent":[]}}],"position":{"start":{"line":29,"column":64,"offset":1029},"end":{"line":29,"column":105,"offset":1070},"indent":[]}},{"type":"text","value":" object as parameter\nto configure the instance.","position":{"start":{"line":29,"column":105,"offset":1070},"end":{"line":30,"column":27,"offset":1117},"indent":[1]}}],"position":{"start":{"line":29,"column":1,"offset":966},"end":{"line":30,"column":27,"offset":1117},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"No further initialization steps are executed. To initialize our instance, use the ","position":{"start":{"line":32,"column":1,"offset":1119},"end":{"line":32,"column":83,"offset":1201},"indent":[]}},{"type":"inlineCode","value":"Persistence::initialize","position":{"start":{"line":32,"column":83,"offset":1201},"end":{"line":32,"column":108,"offset":1226},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":32,"column":108,"offset":1226},"end":{"line":32,"column":116,"offset":1234},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1119},"end":{"line":32,"column":116,"offset":1234},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":34,"column":1,"offset":1236},"end":{"line":34,"column":73,"offset":1308},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Persistence from '@harmonyjs/persistence'\n\n// Initialize a new Persistence instance\nconst persistence = new Persistence({\n    models: [...],\n})","position":{"start":{"line":36,"column":1,"offset":1310},"end":{"line":43,"column":4,"offset":1470},"indent":[1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":45,"column":1,"offset":1472},"end":{"line":45,"column":7,"offset":1478},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::initialize(): Promise<boolean>","position":{"start":{"line":47,"column":5,"offset":1484},"end":{"line":47,"column":50,"offset":1529},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1480},"end":{"line":47,"column":50,"offset":1529},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initialization function computing our models and setting up our database accessors.","position":{"start":{"line":49,"column":1,"offset":1531},"end":{"line":49,"column":84,"offset":1614},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1531},"end":{"line":49,"column":84,"offset":1614},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This functions returns a ","position":{"start":{"line":51,"column":1,"offset":1616},"end":{"line":51,"column":26,"offset":1641},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":51,"column":26,"offset":1641},"end":{"line":51,"column":35,"offset":1650},"indent":[]}},{"type":"text","value":" which resolves when the accessors are done loading.","position":{"start":{"line":51,"column":35,"offset":1650},"end":{"line":51,"column":87,"offset":1702},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":1616},"end":{"line":51,"column":87,"offset":1702},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":53,"column":1,"offset":1704},"end":{"line":53,"column":73,"offset":1776},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Persistence from '@harmonyjs/persistence'\n\nasync function run() {\n    // Initialize a new Persistence instance\n    const persistence = new Persistence({\n        models: [...],\n    })\n\n    console.log('Initializing the Persistence instance...')\n\n    // Start our Persistence instance\n    await persistence.initialize()\n\n    console.log('Persistence instance initialized!')\n}\n\nrun()","position":{"start":{"line":55,"column":1,"offset":1778},"end":{"line":73,"column":4,"offset":2175},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":75,"column":1,"offset":2177},"end":{"line":75,"column":7,"offset":2183},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::controllers","position":{"start":{"line":77,"column":5,"offset":2189},"end":{"line":77,"column":31,"offset":2215},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2185},"end":{"line":77,"column":31,"offset":2215},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":79,"column":1,"offset":2217},"end":{"line":79,"column":5,"offset":2221},"indent":[]}},{"type":"inlineCode","value":"Persistence::controllers","position":{"start":{"line":79,"column":5,"offset":2221},"end":{"line":79,"column":31,"offset":2247},"indent":[]}},{"type":"text","value":" getter exposes two ready-to-use Controllers:","position":{"start":{"line":79,"column":31,"offset":2247},"end":{"line":79,"column":76,"offset":2292},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2217},"end":{"line":79,"column":76,"offset":2292},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"controllers.ControllerGraphQL","position":{"start":{"line":80,"column":3,"offset":2295},"end":{"line":80,"column":34,"offset":2326},"indent":[]}},{"type":"text","value":" can be used to expose a GraphQL endpoint configured with the Persistence instance schema.\nIts constructor accepts one ","position":{"start":{"line":80,"column":34,"offset":2326},"end":{"line":81,"column":29,"offset":2445},"indent":[1]}},{"type":"inlineCode","value":"configuration","position":{"start":{"line":81,"column":29,"offset":2445},"end":{"line":81,"column":44,"offset":2460},"indent":[]}},{"type":"text","value":" argument, of the following type:","position":{"start":{"line":81,"column":44,"offset":2460},"end":{"line":81,"column":77,"offset":2493},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":2295},"end":{"line":81,"column":77,"offset":2493},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2293},"end":{"line":81,"column":77,"offset":2493},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2293},"end":{"line":81,"column":77,"offset":2493},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"type ControllerGraphQLConfig {\n    path: string, // The route on which to expose the GraphQL endpoint\n    enablePlayground: boolean, // Whether to enable the GraphQL Playground page on the endpoint\n}","position":{"start":{"line":82,"column":1,"offset":2494},"end":{"line":87,"column":4,"offset":2703},"indent":[1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"controllers.ControllerEvents","position":{"start":{"line":88,"column":3,"offset":2706},"end":{"line":88,"column":33,"offset":2736},"indent":[]}},{"type":"text","value":" can be used to forward our data events to the application's Socket.IO layer. It doesn't require\nany configuration.","position":{"start":{"line":88,"column":33,"offset":2736},"end":{"line":89,"column":19,"offset":2851},"indent":[1]}}],"position":{"start":{"line":88,"column":3,"offset":2706},"end":{"line":89,"column":19,"offset":2851},"indent":[1]}}],"position":{"start":{"line":88,"column":1,"offset":2704},"end":{"line":89,"column":19,"offset":2851},"indent":[1]}}],"position":{"start":{"line":88,"column":1,"offset":2704},"end":{"line":89,"column":19,"offset":2851},"indent":[1]}},{"type":"jsx","value":"<br />","position":{"start":{"line":91,"column":1,"offset":2853},"end":{"line":91,"column":7,"offset":2859},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":93,"column":4,"offset":2864},"end":{"line":93,"column":23,"offset":2883},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2861},"end":{"line":93,"column":23,"offset":2883},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":95,"column":1,"offset":2885},"end":{"line":95,"column":5,"offset":2889},"indent":[]}},{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":95,"column":5,"offset":2889},"end":{"line":95,"column":24,"offset":2908},"indent":[]}},{"type":"text","value":" object configures a ","position":{"start":{"line":95,"column":24,"offset":2908},"end":{"line":95,"column":45,"offset":2929},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":95,"column":45,"offset":2929},"end":{"line":95,"column":58,"offset":2942},"indent":[]}},{"type":"text","value":" instance. Here are the various parameters available:","position":{"start":{"line":95,"column":58,"offset":2942},"end":{"line":95,"column":111,"offset":2995},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2885},"end":{"line":95,"column":111,"offset":2995},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type PersistenceConfig = {\n  models: Model[],\n  accessors?: {[key: string]: Accessor},\n  defaultAccessor?: string,\n  strict?: boolean,\n  log?: LogConfig,\n}","position":{"start":{"line":97,"column":1,"offset":2997},"end":{"line":105,"column":4,"offset":3162},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::models","position":{"start":{"line":107,"column":5,"offset":3168},"end":{"line":107,"column":32,"offset":3195},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3164},"end":{"line":107,"column":32,"offset":3195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The mandatory ","position":{"start":{"line":109,"column":1,"offset":3197},"end":{"line":109,"column":15,"offset":3211},"indent":[]}},{"type":"inlineCode","value":"models","position":{"start":{"line":109,"column":15,"offset":3211},"end":{"line":109,"column":23,"offset":3219},"indent":[]}},{"type":"text","value":" field is an array of data-models. Refer to the ","position":{"start":{"line":109,"column":23,"offset":3219},"end":{"line":109,"column":71,"offset":3267},"indent":[]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":109,"column":72,"offset":3268},"end":{"line":109,"column":79,"offset":3275},"indent":[]}}],"position":{"start":{"line":109,"column":71,"offset":3267},"end":{"line":109,"column":88,"offset":3284},"indent":[]}},{"type":"text","value":" definition to learn more about models.","position":{"start":{"line":109,"column":88,"offset":3284},"end":{"line":109,"column":127,"offset":3323},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":3197},"end":{"line":109,"column":127,"offset":3323},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This field contains the list of all models to expose in the Persistence schema.","position":{"start":{"line":111,"column":1,"offset":3325},"end":{"line":111,"column":80,"offset":3404},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":3325},"end":{"line":111,"column":80,"offset":3404},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::accessors","position":{"start":{"line":113,"column":5,"offset":3410},"end":{"line":113,"column":35,"offset":3440},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":3406},"end":{"line":113,"column":35,"offset":3440},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This optional field allows to give a mapping of ","position":{"start":{"line":115,"column":1,"offset":3442},"end":{"line":115,"column":49,"offset":3490},"indent":[]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":115,"column":50,"offset":3491},"end":{"line":115,"column":61,"offset":3502},"indent":[]}}],"position":{"start":{"line":115,"column":49,"offset":3490},"end":{"line":115,"column":82,"offset":3523},"indent":[]}},{"type":"text","value":". Each accessor has a unique key in the map,\nwhich can later be used to identify a ","position":{"start":{"line":115,"column":82,"offset":3523},"end":{"line":116,"column":39,"offset":3606},"indent":[1]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":116,"column":40,"offset":3607},"end":{"line":116,"column":47,"offset":3614},"indent":[]}}],"position":{"start":{"line":116,"column":39,"offset":3606},"end":{"line":116,"column":56,"offset":3623},"indent":[]}},{"type":"text","value":"'s accessor.","position":{"start":{"line":116,"column":56,"offset":3623},"end":{"line":116,"column":68,"offset":3635},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3442},"end":{"line":116,"column":68,"offset":3635},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Refer to the ","position":{"start":{"line":118,"column":1,"offset":3637},"end":{"line":118,"column":14,"offset":3650},"indent":[]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":118,"column":15,"offset":3651},"end":{"line":118,"column":26,"offset":3662},"indent":[]}}],"position":{"start":{"line":118,"column":14,"offset":3650},"end":{"line":118,"column":47,"offset":3683},"indent":[]}},{"type":"text","value":" documentation to learn more.","position":{"start":{"line":118,"column":47,"offset":3683},"end":{"line":118,"column":76,"offset":3712},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":3637},"end":{"line":118,"column":76,"offset":3712},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::defaultAccessor","position":{"start":{"line":120,"column":5,"offset":3718},"end":{"line":120,"column":41,"offset":3754},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":3714},"end":{"line":120,"column":41,"offset":3754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Key of the accessor to use when no accessor is specified for a model. If not provided, defaults to the first accessor in the map.","position":{"start":{"line":122,"column":1,"offset":3756},"end":{"line":122,"column":130,"offset":3885},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":3756},"end":{"line":122,"column":130,"offset":3885},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::strict","position":{"start":{"line":124,"column":5,"offset":3891},"end":{"line":124,"column":32,"offset":3918},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3887},"end":{"line":124,"column":32,"offset":3918},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whether to compile a schema in strict mode. When using strict mode, only CRUD actions for which a ","position":{"start":{"line":126,"column":1,"offset":3920},"end":{"line":126,"column":99,"offset":4018},"indent":[]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":126,"column":99,"offset":4018},"end":{"line":126,"column":106,"offset":4025},"indent":[]}},{"type":"text","value":" function has been provided\nwill be added to the schema. To learn more about ","position":{"start":{"line":126,"column":106,"offset":4025},"end":{"line":127,"column":50,"offset":4102},"indent":[1]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":127,"column":50,"offset":4102},"end":{"line":127,"column":57,"offset":4109},"indent":[]}},{"type":"text","value":" functions, refer to the ","position":{"start":{"line":127,"column":57,"offset":4109},"end":{"line":127,"column":82,"offset":4134},"indent":[]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":127,"column":83,"offset":4135},"end":{"line":127,"column":90,"offset":4142},"indent":[]}}],"position":{"start":{"line":127,"column":82,"offset":4134},"end":{"line":127,"column":99,"offset":4151},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":127,"column":99,"offset":4151},"end":{"line":127,"column":114,"offset":4166},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3920},"end":{"line":127,"column":114,"offset":4166},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::log","position":{"start":{"line":129,"column":5,"offset":4172},"end":{"line":129,"column":29,"offset":4196},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":4168},"end":{"line":129,"column":29,"offset":4196},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Configuration of the way the persistence instance logs its actions. Refer to the ","position":{"start":{"line":131,"column":1,"offset":4198},"end":{"line":131,"column":82,"offset":4279},"indent":[]}},{"type":"link","title":null,"url":"/api/utils#logconfig","children":[{"type":"text","value":"Log util documentation","position":{"start":{"line":131,"column":83,"offset":4280},"end":{"line":131,"column":105,"offset":4302},"indent":[]}}],"position":{"start":{"line":131,"column":82,"offset":4279},"end":{"line":131,"column":128,"offset":4325},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":4198},"end":{"line":131,"column":128,"offset":4325},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":133,"column":1,"offset":4327},"end":{"line":133,"column":7,"offset":4333},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Model","position":{"start":{"line":135,"column":4,"offset":4338},"end":{"line":135,"column":9,"offset":4343},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4335},"end":{"line":135,"column":9,"offset":4343},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":137,"column":1,"offset":4345},"end":{"line":137,"column":7,"offset":4351},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Other exports","position":{"start":{"line":139,"column":4,"offset":4356},"end":{"line":139,"column":17,"offset":4369},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4353},"end":{"line":139,"column":17,"offset":4369},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":141,"column":1,"offset":4371},"end":{"line":141,"column":7,"offset":4377},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Types","position":{"start":{"line":143,"column":5,"offset":4383},"end":{"line":143,"column":10,"offset":4388},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4379},"end":{"line":143,"column":10,"offset":4388},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":145,"column":1,"offset":4390},"end":{"line":145,"column":7,"offset":4396},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"FieldMode","position":{"start":{"line":147,"column":5,"offset":4402},"end":{"line":147,"column":14,"offset":4411},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4398},"end":{"line":147,"column":14,"offset":4411},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":150,"column":1,"offset":4414},"end":{"line":150,"column":31,"offset":4444},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":150,"column":31,"offset":4444}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"harmonyjs-persistence\"\n    }}>{`HarmonyJS Persistence`}</h1>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{` handles the data of our application. It provides a convenient way to describe our models, and\nconnect them to our databases through accessors.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` While not mandatory, `}<a parentName=\"em\" {...{\n          \"href\": \"https://graphql.org/\"\n        }}>{`GraphQL`}</a>{` is the main target of the persistence module, and is needed`}</em>{`\n`}<em parentName=\"p\">{`to take full advantage of HarmonyJS`}</em></p>\n    <br />\n    <h2 {...{\n      \"id\": \"persistence\"\n    }}><inlineCode parentName=\"h2\">{`Persistence`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{` default export is the `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` constructor.`}</p>\n    <p>{`This constructor allows us to create a `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance, which can be configured to handle our database accesses.\nA `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance only has two publicly available methods: the constructor itself, and an `}<inlineCode parentName=\"p\">{`initialize`}</inlineCode>{` function.`}</p>\n    <br />\n    <h3 {...{\n      \"id\": \"persistencenewpersistenceconfig-config-persistence\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::new(`}</inlineCode><a parentName=\"h3\" {...{\n        \"href\": \"#persistenceconfig\"\n      }}><inlineCode parentName=\"a\">{`PersistenceConfig`}</inlineCode></a><inlineCode parentName=\"h3\">{`: config): Persistence`}</inlineCode></h3>\n    <p>{`Constructor to create a new `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance. It takes a `}<a parentName=\"p\" {...{\n        \"href\": \"#persistenceconfig\"\n      }}><inlineCode parentName=\"a\">{`PersistenceConfig`}</inlineCode></a>{` object as parameter\nto configure the instance.`}</p>\n    <p>{`No further initialization steps are executed. To initialize our instance, use the `}<inlineCode parentName=\"p\">{`Persistence::initialize`}</inlineCode>{` method.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Persistence from '@harmonyjs/persistence'\n\n// Initialize a new Persistence instance\nconst persistence = new Persistence({\n    models: [...],\n})\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"persistenceinitialize-promiseboolean\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::initialize(): Promise<boolean>`}</inlineCode></h3>\n    <p>{`Initialization function computing our models and setting up our database accessors.`}</p>\n    <p>{`This functions returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` which resolves when the accessors are done loading.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Persistence from '@harmonyjs/persistence'\n\nasync function run() {\n    // Initialize a new Persistence instance\n    const persistence = new Persistence({\n        models: [...],\n    })\n\n    console.log('Initializing the Persistence instance...')\n\n    // Start our Persistence instance\n    await persistence.initialize()\n\n    console.log('Persistence instance initialized!')\n}\n\nrun()\n`}</code></pre>\n    <br />\n    <h3 {...{\n      \"id\": \"persistencecontrollers\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::controllers`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Persistence::controllers`}</inlineCode>{` getter exposes two ready-to-use Controllers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controllers.ControllerGraphQL`}</inlineCode>{` can be used to expose a GraphQL endpoint configured with the Persistence instance schema.\nIts constructor accepts one `}<inlineCode parentName=\"li\">{`configuration`}</inlineCode>{` argument, of the following type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type ControllerGraphQLConfig {\n    path: string, // The route on which to expose the GraphQL endpoint\n    enablePlayground: boolean, // Whether to enable the GraphQL Playground page on the endpoint\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controllers.ControllerEvents`}</inlineCode>{` can be used to forward our data events to the application's Socket.IO layer. It doesn't require\nany configuration.`}</li>\n    </ul>\n    <br />\n    <h2 {...{\n      \"id\": \"persistenceconfig\"\n    }}><inlineCode parentName=\"h2\">{`PersistenceConfig`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`PersistenceConfig`}</inlineCode>{` object configures a `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance. Here are the various parameters available:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type PersistenceConfig = {\n  models: Model[],\n  accessors?: {[key: string]: Accessor},\n  defaultAccessor?: string,\n  strict?: boolean,\n  log?: LogConfig,\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistenceconfigmodels\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::models`}</inlineCode></h3>\n    <p>{`The mandatory `}<inlineCode parentName=\"p\">{`models`}</inlineCode>{` field is an array of data-models. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{` definition to learn more about models.`}</p>\n    <p>{`This field contains the list of all models to expose in the Persistence schema.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigaccessors\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::accessors`}</inlineCode></h3>\n    <p>{`This optional field allows to give a mapping of `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{`. Each accessor has a unique key in the map,\nwhich can later be used to identify a `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{`'s accessor.`}</p>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{` documentation to learn more.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigdefaultaccessor\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::defaultAccessor`}</inlineCode></h3>\n    <p>{`Key of the accessor to use when no accessor is specified for a model. If not provided, defaults to the first accessor in the map.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigstrict\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::strict`}</inlineCode></h3>\n    <p>{`Whether to compile a schema in strict mode. When using strict mode, only CRUD actions for which a `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` function has been provided\nwill be added to the schema. To learn more about `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` functions, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{` documentation.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfiglog\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::log`}</inlineCode></h3>\n    <p>{`Configuration of the way the persistence instance logs its actions. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/api/utils#logconfig\"\n      }}>{`Log util documentation`}</a></p>\n    <br />\n    <h2 {...{\n      \"id\": \"model\"\n    }}>{`Model`}</h2>\n    <br />\n    <h2 {...{\n      \"id\": \"other-exports\"\n    }}>{`Other exports`}</h2>\n    <br />\n    <h3 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h3>\n    <br />\n    <h3 {...{\n      \"id\": \"fieldmode\"\n    }}>{`FieldMode`}</h3>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}