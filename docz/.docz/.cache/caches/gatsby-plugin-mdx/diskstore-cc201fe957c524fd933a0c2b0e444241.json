{"expireTime":9007200832287141000,"key":"gatsby-plugin-mdx-entire-payload-e0a974744e0da09e19385c33f72faf08-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"HarmonyJS Persistence","position":{"start":{"line":8,"column":3,"offset":170},"end":{"line":8,"column":24,"offset":191},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":8,"column":24,"offset":191},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":10,"column":25,"offset":217},"indent":[]}},{"type":"text","value":" handles the data of our application. It provides a convenient way to describe our models, and\nconnect them to our databases through accessors.","position":{"start":{"line":10,"column":25,"offset":217},"end":{"line":11,"column":49,"offset":360},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":193},"end":{"line":11,"column":49,"offset":360},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":4,"offset":365},"end":{"line":13,"column":9,"offset":370},"indent":[]}}],"position":{"start":{"line":13,"column":2,"offset":363},"end":{"line":13,"column":11,"offset":372},"indent":[]}},{"type":"text","value":" While not mandatory, ","position":{"start":{"line":13,"column":11,"offset":372},"end":{"line":13,"column":33,"offset":394},"indent":[]}},{"type":"link","title":null,"url":"https://graphql.org/","children":[{"type":"text","value":"GraphQL","position":{"start":{"line":13,"column":34,"offset":395},"end":{"line":13,"column":41,"offset":402},"indent":[]}}],"position":{"start":{"line":13,"column":33,"offset":394},"end":{"line":13,"column":64,"offset":425},"indent":[]}},{"type":"text","value":" is the main target of the persistence module, and is needed","position":{"start":{"line":13,"column":64,"offset":425},"end":{"line":13,"column":124,"offset":485},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":362},"end":{"line":13,"column":125,"offset":486},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":125,"offset":486},"end":{"line":14,"column":1,"offset":487},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to take full advantage of HarmonyJS","position":{"start":{"line":14,"column":2,"offset":488},"end":{"line":14,"column":37,"offset":523},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":487},"end":{"line":14,"column":38,"offset":524},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":362},"end":{"line":14,"column":38,"offset":524},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Persistence","position":{"start":{"line":16,"column":4,"offset":529},"end":{"line":16,"column":17,"offset":542},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":526},"end":{"line":16,"column":17,"offset":542},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/persistence","position":{"start":{"line":18,"column":1,"offset":544},"end":{"line":18,"column":25,"offset":568},"indent":[]}},{"type":"text","value":" default export is the ","position":{"start":{"line":18,"column":25,"offset":568},"end":{"line":18,"column":48,"offset":591},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":18,"column":48,"offset":591},"end":{"line":18,"column":61,"offset":604},"indent":[]}},{"type":"text","value":" constructor.","position":{"start":{"line":18,"column":61,"offset":604},"end":{"line":18,"column":74,"offset":617},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":544},"end":{"line":18,"column":74,"offset":617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This constructor allows us to create a ","position":{"start":{"line":20,"column":1,"offset":619},"end":{"line":20,"column":40,"offset":658},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":20,"column":40,"offset":658},"end":{"line":20,"column":53,"offset":671},"indent":[]}},{"type":"text","value":" instance, which can be configured to handle our database accesses.\nA ","position":{"start":{"line":20,"column":53,"offset":671},"end":{"line":21,"column":3,"offset":741},"indent":[1]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":21,"column":3,"offset":741},"end":{"line":21,"column":16,"offset":754},"indent":[]}},{"type":"text","value":" instance only has two publicly available methods: the constructor itself, and an ","position":{"start":{"line":21,"column":16,"offset":754},"end":{"line":21,"column":98,"offset":836},"indent":[]}},{"type":"inlineCode","value":"initialize","position":{"start":{"line":21,"column":98,"offset":836},"end":{"line":21,"column":110,"offset":848},"indent":[]}},{"type":"text","value":" function.","position":{"start":{"line":21,"column":110,"offset":848},"end":{"line":21,"column":120,"offset":858},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":619},"end":{"line":21,"column":120,"offset":858},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::new(","position":{"start":{"line":23,"column":5,"offset":864},"end":{"line":23,"column":24,"offset":883},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfig","children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":23,"column":25,"offset":884},"end":{"line":23,"column":44,"offset":903},"indent":[]}}],"position":{"start":{"line":23,"column":24,"offset":883},"end":{"line":23,"column":65,"offset":924},"indent":[]}},{"type":"inlineCode","value":": config): Persistence","position":{"start":{"line":23,"column":65,"offset":924},"end":{"line":23,"column":89,"offset":948},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":860},"end":{"line":23,"column":89,"offset":948},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Constructor to create a new ","position":{"start":{"line":25,"column":1,"offset":950},"end":{"line":25,"column":29,"offset":978},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":25,"column":29,"offset":978},"end":{"line":25,"column":42,"offset":991},"indent":[]}},{"type":"text","value":" instance. It takes a ","position":{"start":{"line":25,"column":42,"offset":991},"end":{"line":25,"column":64,"offset":1013},"indent":[]}},{"type":"link","title":null,"url":"#persistenceconfig","children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":25,"column":65,"offset":1014},"end":{"line":25,"column":84,"offset":1033},"indent":[]}}],"position":{"start":{"line":25,"column":64,"offset":1013},"end":{"line":25,"column":105,"offset":1054},"indent":[]}},{"type":"text","value":" object as parameter\nto configure the instance.","position":{"start":{"line":25,"column":105,"offset":1054},"end":{"line":26,"column":27,"offset":1101},"indent":[1]}}],"position":{"start":{"line":25,"column":1,"offset":950},"end":{"line":26,"column":27,"offset":1101},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"No further initialization steps are executed. To initialize our instance, use the ","position":{"start":{"line":28,"column":1,"offset":1103},"end":{"line":28,"column":83,"offset":1185},"indent":[]}},{"type":"inlineCode","value":"Persistence::initialize","position":{"start":{"line":28,"column":83,"offset":1185},"end":{"line":28,"column":108,"offset":1210},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":28,"column":108,"offset":1210},"end":{"line":28,"column":116,"offset":1218},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1103},"end":{"line":28,"column":116,"offset":1218},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":30,"column":1,"offset":1220},"end":{"line":30,"column":73,"offset":1292},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Persistence from '@harmonyjs/persistence'\n\n// Initialize a new Persistence instance\nconst persistence = new Persistence({\n    models: [...],\n})","position":{"start":{"line":32,"column":1,"offset":1294},"end":{"line":39,"column":4,"offset":1454},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::initialize(): Promise<boolean>","position":{"start":{"line":41,"column":5,"offset":1460},"end":{"line":41,"column":50,"offset":1505},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1456},"end":{"line":41,"column":50,"offset":1505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initialization function computing our models and setting up our database accessors.","position":{"start":{"line":43,"column":1,"offset":1507},"end":{"line":43,"column":84,"offset":1590},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1507},"end":{"line":43,"column":84,"offset":1590},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This functions returns a ","position":{"start":{"line":45,"column":1,"offset":1592},"end":{"line":45,"column":26,"offset":1617},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":45,"column":26,"offset":1617},"end":{"line":45,"column":35,"offset":1626},"indent":[]}},{"type":"text","value":" which resolves when the accessors are done loading.","position":{"start":{"line":45,"column":35,"offset":1626},"end":{"line":45,"column":87,"offset":1678},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1592},"end":{"line":45,"column":87,"offset":1678},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":47,"column":1,"offset":1680},"end":{"line":47,"column":73,"offset":1752},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Persistence from '@harmonyjs/persistence'\n\nasync function run() {\n    // Initialize a new Persistence instance\n    const persistence = new Persistence({\n        models: [...],\n    })\n\n    console.log('Initializing the Persistence instance...')\n\n    // Start our Persistence instance\n    await persistence.initialize()\n\n    console.log('Persistence instance initialized!')\n}\n\nrun()","position":{"start":{"line":49,"column":1,"offset":1754},"end":{"line":67,"column":4,"offset":2151},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Persistence::controllers","position":{"start":{"line":69,"column":5,"offset":2157},"end":{"line":69,"column":31,"offset":2183},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":2153},"end":{"line":69,"column":31,"offset":2183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":71,"column":1,"offset":2185},"end":{"line":71,"column":5,"offset":2189},"indent":[]}},{"type":"inlineCode","value":"Persistence::controllers","position":{"start":{"line":71,"column":5,"offset":2189},"end":{"line":71,"column":31,"offset":2215},"indent":[]}},{"type":"text","value":" getter exposes two ready-to-use Controllers:","position":{"start":{"line":71,"column":31,"offset":2215},"end":{"line":71,"column":76,"offset":2260},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2185},"end":{"line":71,"column":76,"offset":2260},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"controllers.ControllerGraphQL","position":{"start":{"line":72,"column":3,"offset":2263},"end":{"line":72,"column":34,"offset":2294},"indent":[]}},{"type":"text","value":" can be used to expose a GraphQL endpoint configured with the Persistence instance schema.\nIts constructor accepts one ","position":{"start":{"line":72,"column":34,"offset":2294},"end":{"line":73,"column":29,"offset":2413},"indent":[1]}},{"type":"inlineCode","value":"configuration","position":{"start":{"line":73,"column":29,"offset":2413},"end":{"line":73,"column":44,"offset":2428},"indent":[]}},{"type":"text","value":" argument, of the following type:","position":{"start":{"line":73,"column":44,"offset":2428},"end":{"line":73,"column":77,"offset":2461},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":2263},"end":{"line":73,"column":77,"offset":2461},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":2261},"end":{"line":73,"column":77,"offset":2461},"indent":[1]}}],"position":{"start":{"line":72,"column":1,"offset":2261},"end":{"line":73,"column":77,"offset":2461},"indent":[1]}},{"type":"code","lang":"ts","meta":null,"value":"type ControllerGraphQLConfig {\n    path: string, // The route on which to expose the GraphQL endpoint\n    enablePlayground: boolean, // Whether to enable the GraphQL Playground page on the endpoint\n}","position":{"start":{"line":74,"column":1,"offset":2462},"end":{"line":79,"column":4,"offset":2671},"indent":[1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"controllers.ControllerEvents","position":{"start":{"line":80,"column":3,"offset":2674},"end":{"line":80,"column":33,"offset":2704},"indent":[]}},{"type":"text","value":" can be used to forward our data events to the application's Socket.IO layer. It doesn't require\nany configuration.","position":{"start":{"line":80,"column":33,"offset":2704},"end":{"line":81,"column":19,"offset":2819},"indent":[1]}}],"position":{"start":{"line":80,"column":3,"offset":2674},"end":{"line":81,"column":19,"offset":2819},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2672},"end":{"line":81,"column":19,"offset":2819},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":2672},"end":{"line":81,"column":19,"offset":2819},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":83,"column":4,"offset":2824},"end":{"line":83,"column":23,"offset":2843},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2821},"end":{"line":83,"column":23,"offset":2843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":85,"column":1,"offset":2845},"end":{"line":85,"column":5,"offset":2849},"indent":[]}},{"type":"inlineCode","value":"PersistenceConfig","position":{"start":{"line":85,"column":5,"offset":2849},"end":{"line":85,"column":24,"offset":2868},"indent":[]}},{"type":"text","value":" object configures a ","position":{"start":{"line":85,"column":24,"offset":2868},"end":{"line":85,"column":45,"offset":2889},"indent":[]}},{"type":"inlineCode","value":"Persistence","position":{"start":{"line":85,"column":45,"offset":2889},"end":{"line":85,"column":58,"offset":2902},"indent":[]}},{"type":"text","value":" instance. Here are the various parameters available:","position":{"start":{"line":85,"column":58,"offset":2902},"end":{"line":85,"column":111,"offset":2955},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2845},"end":{"line":85,"column":111,"offset":2955},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type PersistenceConfig = {\n  models: Model[],\n  accessors?: {[key: string]: Accessor},\n  defaultAccessor?: string,\n  strict?: boolean,\n  log?: LogConfig,\n}","position":{"start":{"line":87,"column":1,"offset":2957},"end":{"line":95,"column":4,"offset":3122},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::models","position":{"start":{"line":97,"column":5,"offset":3128},"end":{"line":97,"column":32,"offset":3155},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3124},"end":{"line":97,"column":32,"offset":3155},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The mandatory ","position":{"start":{"line":99,"column":1,"offset":3157},"end":{"line":99,"column":15,"offset":3171},"indent":[]}},{"type":"inlineCode","value":"models","position":{"start":{"line":99,"column":15,"offset":3171},"end":{"line":99,"column":23,"offset":3179},"indent":[]}},{"type":"text","value":" field is an array of data-models. Refer to the ","position":{"start":{"line":99,"column":23,"offset":3179},"end":{"line":99,"column":71,"offset":3227},"indent":[]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":99,"column":72,"offset":3228},"end":{"line":99,"column":79,"offset":3235},"indent":[]}}],"position":{"start":{"line":99,"column":71,"offset":3227},"end":{"line":99,"column":88,"offset":3244},"indent":[]}},{"type":"text","value":" definition to learn more about models.","position":{"start":{"line":99,"column":88,"offset":3244},"end":{"line":99,"column":127,"offset":3283},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3157},"end":{"line":99,"column":127,"offset":3283},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This field contains the list of all models to expose in the Persistence schema.","position":{"start":{"line":101,"column":1,"offset":3285},"end":{"line":101,"column":80,"offset":3364},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3285},"end":{"line":101,"column":80,"offset":3364},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::accessors","position":{"start":{"line":103,"column":5,"offset":3370},"end":{"line":103,"column":35,"offset":3400},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3366},"end":{"line":103,"column":35,"offset":3400},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This optional field allows to give a mapping of ","position":{"start":{"line":105,"column":1,"offset":3402},"end":{"line":105,"column":49,"offset":3450},"indent":[]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":105,"column":50,"offset":3451},"end":{"line":105,"column":61,"offset":3462},"indent":[]}}],"position":{"start":{"line":105,"column":49,"offset":3450},"end":{"line":105,"column":82,"offset":3483},"indent":[]}},{"type":"text","value":". Each accessor has a unique key in the map,\nwhich can later be used to identify a ","position":{"start":{"line":105,"column":82,"offset":3483},"end":{"line":106,"column":39,"offset":3566},"indent":[1]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":106,"column":40,"offset":3567},"end":{"line":106,"column":47,"offset":3574},"indent":[]}}],"position":{"start":{"line":106,"column":39,"offset":3566},"end":{"line":106,"column":56,"offset":3583},"indent":[]}},{"type":"text","value":"'s accessor.","position":{"start":{"line":106,"column":56,"offset":3583},"end":{"line":106,"column":68,"offset":3595},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3402},"end":{"line":106,"column":68,"offset":3595},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Refer to the ","position":{"start":{"line":108,"column":1,"offset":3597},"end":{"line":108,"column":14,"offset":3610},"indent":[]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":108,"column":15,"offset":3611},"end":{"line":108,"column":26,"offset":3622},"indent":[]}}],"position":{"start":{"line":108,"column":14,"offset":3610},"end":{"line":108,"column":47,"offset":3643},"indent":[]}},{"type":"text","value":" documentation to learn more.","position":{"start":{"line":108,"column":47,"offset":3643},"end":{"line":108,"column":76,"offset":3672},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3597},"end":{"line":108,"column":76,"offset":3672},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::defaultAccessor","position":{"start":{"line":110,"column":5,"offset":3678},"end":{"line":110,"column":41,"offset":3714},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3674},"end":{"line":110,"column":41,"offset":3714},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Key of the accessor to use when no accessor is specified for a model. If not provided, defaults to the first accessor in the map.","position":{"start":{"line":112,"column":1,"offset":3716},"end":{"line":112,"column":130,"offset":3845},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":3716},"end":{"line":112,"column":130,"offset":3845},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::strict","position":{"start":{"line":114,"column":5,"offset":3851},"end":{"line":114,"column":32,"offset":3878},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3847},"end":{"line":114,"column":32,"offset":3878},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Whether to compile a schema in strict mode. When using strict mode, only CRUD actions for which a ","position":{"start":{"line":116,"column":1,"offset":3880},"end":{"line":116,"column":99,"offset":3978},"indent":[]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":116,"column":99,"offset":3978},"end":{"line":116,"column":106,"offset":3985},"indent":[]}},{"type":"text","value":" function has been provided\nwill be added to the schema. To learn more about ","position":{"start":{"line":116,"column":106,"offset":3985},"end":{"line":117,"column":50,"offset":4062},"indent":[1]}},{"type":"inlineCode","value":"scope","position":{"start":{"line":117,"column":50,"offset":4062},"end":{"line":117,"column":57,"offset":4069},"indent":[]}},{"type":"text","value":" functions, refer to the ","position":{"start":{"line":117,"column":57,"offset":4069},"end":{"line":117,"column":82,"offset":4094},"indent":[]}},{"type":"link","title":null,"url":"#model","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":117,"column":83,"offset":4095},"end":{"line":117,"column":90,"offset":4102},"indent":[]}}],"position":{"start":{"line":117,"column":82,"offset":4094},"end":{"line":117,"column":99,"offset":4111},"indent":[]}},{"type":"text","value":" documentation.","position":{"start":{"line":117,"column":99,"offset":4111},"end":{"line":117,"column":114,"offset":4126},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3880},"end":{"line":117,"column":114,"offset":4126},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"PersistenceConfig::log","position":{"start":{"line":119,"column":5,"offset":4132},"end":{"line":119,"column":29,"offset":4156},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":4128},"end":{"line":119,"column":29,"offset":4156},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Configuration of the way the persistence instance logs its actions. Refer to the ","position":{"start":{"line":121,"column":1,"offset":4158},"end":{"line":121,"column":82,"offset":4239},"indent":[]}},{"type":"link","title":null,"url":"/api/utils#logconfig","children":[{"type":"text","value":"Log util documentation","position":{"start":{"line":121,"column":83,"offset":4240},"end":{"line":121,"column":105,"offset":4262},"indent":[]}}],"position":{"start":{"line":121,"column":82,"offset":4239},"end":{"line":121,"column":128,"offset":4285},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":4158},"end":{"line":121,"column":128,"offset":4285},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":123,"column":4,"offset":4290},"end":{"line":123,"column":11,"offset":4297},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":4287},"end":{"line":123,"column":11,"offset":4297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":125,"column":1,"offset":4299},"end":{"line":125,"column":5,"offset":4303},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":125,"column":5,"offset":4303},"end":{"line":125,"column":12,"offset":4310},"indent":[]}},{"type":"text","value":" type is used to describe a collection of objects to store in a database. HarmonyJS provides a unified way to\ndescribe such a model, that can later be translated to fit any storage mechanism. This translation is the role of the ","position":{"start":{"line":125,"column":12,"offset":4310},"end":{"line":126,"column":119,"offset":4538},"indent":[1]}},{"type":"link","title":null,"url":"/plugins/accessors","children":[{"type":"inlineCode","value":"Accessors","position":{"start":{"line":126,"column":120,"offset":4539},"end":{"line":126,"column":131,"offset":4550},"indent":[]}}],"position":{"start":{"line":126,"column":119,"offset":4538},"end":{"line":126,"column":152,"offset":4571},"indent":[]}},{"type":"text","value":" plugins.","position":{"start":{"line":126,"column":152,"offset":4571},"end":{"line":126,"column":161,"offset":4580},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":4299},"end":{"line":126,"column":161,"offset":4580},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":128,"column":1,"offset":4582},"end":{"line":128,"column":5,"offset":4586},"indent":[]}},{"type":"inlineCode","value":"Model","position":{"start":{"line":128,"column":5,"offset":4586},"end":{"line":128,"column":12,"offset":4593},"indent":[]}},{"type":"text","value":" type is as follows:","position":{"start":{"line":128,"column":12,"offset":4593},"end":{"line":128,"column":32,"offset":4613},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4582},"end":{"line":128,"column":32,"offset":4613},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type Model = {\n  name: string,\n  schema: {\n    [key: string]: Property\n  },\n\n  computed?: Computed,\n  scopes?: Scopes,\n\n  accessor?: string,\n  external?: boolean,\n}","position":{"start":{"line":130,"column":1,"offset":4615},"end":{"line":143,"column":4,"offset":4789},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Only two properties are required: ","position":{"start":{"line":145,"column":1,"offset":4791},"end":{"line":145,"column":35,"offset":4825},"indent":[]}},{"type":"inlineCode","value":"name","position":{"start":{"line":145,"column":35,"offset":4825},"end":{"line":145,"column":41,"offset":4831},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":145,"column":41,"offset":4831},"end":{"line":145,"column":46,"offset":4836},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":145,"column":46,"offset":4836},"end":{"line":145,"column":54,"offset":4844},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":145,"column":54,"offset":4844},"end":{"line":145,"column":55,"offset":4845},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4791},"end":{"line":145,"column":55,"offset":4845},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":147,"column":3,"offset":4849},"end":{"line":147,"column":7,"offset":4853},"indent":[]}},{"type":"inlineCode","value":"name","position":{"start":{"line":147,"column":7,"offset":4853},"end":{"line":147,"column":13,"offset":4859},"indent":[]}},{"type":"text","value":" property is the name of the collection. This should be a singular noun. ","position":{"start":{"line":147,"column":13,"offset":4859},"end":{"line":147,"column":86,"offset":4932},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":147,"column":86,"offset":4932},"end":{"line":147,"column":92,"offset":4938},"indent":[]}},{"type":"text","value":"\nIf it needs to be a composed word, use kebab case: ","position":{"start":{"line":147,"column":92,"offset":4938},"end":{"line":148,"column":52,"offset":4990},"indent":[1]}},{"type":"inlineCode","value":"'my-multiple-words-name'","position":{"start":{"line":148,"column":52,"offset":4990},"end":{"line":148,"column":78,"offset":5016},"indent":[]}}],"position":{"start":{"line":147,"column":3,"offset":4849},"end":{"line":148,"column":78,"offset":5016},"indent":[1]}}],"position":{"start":{"line":147,"column":1,"offset":4847},"end":{"line":148,"column":78,"offset":5016},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":149,"column":3,"offset":5019},"end":{"line":149,"column":7,"offset":5023},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":149,"column":7,"offset":5023},"end":{"line":149,"column":15,"offset":5031},"indent":[]}},{"type":"text","value":" property is an object defining the base form of our collection. It maps each field name to a ","position":{"start":{"line":149,"column":15,"offset":5031},"end":{"line":149,"column":109,"offset":5125},"indent":[]}},{"type":"link","title":null,"url":"#property","children":[{"type":"inlineCode","value":"Property","position":{"start":{"line":149,"column":110,"offset":5126},"end":{"line":149,"column":120,"offset":5136},"indent":[]}}],"position":{"start":{"line":149,"column":109,"offset":5125},"end":{"line":149,"column":132,"offset":5148},"indent":[]}},{"type":"text","value":"\ndefinition, which is declared using HarmonyJS's ","position":{"start":{"line":149,"column":132,"offset":5148},"end":{"line":150,"column":49,"offset":5197},"indent":[1]}},{"type":"link","title":null,"url":"#types","children":[{"type":"inlineCode","value":"Types","position":{"start":{"line":150,"column":50,"offset":5198},"end":{"line":150,"column":57,"offset":5205},"indent":[]}}],"position":{"start":{"line":150,"column":49,"offset":5197},"end":{"line":150,"column":66,"offset":5214},"indent":[]}},{"type":"text","value":". You can see a sample ","position":{"start":{"line":150,"column":66,"offset":5214},"end":{"line":150,"column":89,"offset":5237},"indent":[]}},{"type":"inlineCode","value":"schema","position":{"start":{"line":150,"column":89,"offset":5237},"end":{"line":150,"column":97,"offset":5245},"indent":[]}},{"type":"text","value":" in the ","position":{"start":{"line":150,"column":97,"offset":5245},"end":{"line":150,"column":105,"offset":5253},"indent":[]}},{"type":"link","title":null,"url":"/guides/creating-models","children":[{"type":"inlineCode","value":"Model","position":{"start":{"line":150,"column":106,"offset":5254},"end":{"line":150,"column":113,"offset":5261},"indent":[]}},{"type":"text","value":" guide","position":{"start":{"line":150,"column":113,"offset":5261},"end":{"line":150,"column":119,"offset":5267},"indent":[]}}],"position":{"start":{"line":150,"column":105,"offset":5253},"end":{"line":150,"column":145,"offset":5293},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":150,"column":145,"offset":5293},"end":{"line":150,"column":146,"offset":5294},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":5019},"end":{"line":150,"column":146,"offset":5294},"indent":[1]}}],"position":{"start":{"line":149,"column":1,"offset":5017},"end":{"line":150,"column":146,"offset":5294},"indent":[1]}}],"position":{"start":{"line":147,"column":1,"offset":4847},"end":{"line":150,"column":146,"offset":5294},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The next two properties are optional and allows us to extend the capabilities of our model: ","position":{"start":{"line":154,"column":1,"offset":5298},"end":{"line":154,"column":93,"offset":5390},"indent":[]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":154,"column":93,"offset":5390},"end":{"line":154,"column":103,"offset":5400},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":154,"column":103,"offset":5400},"end":{"line":154,"column":108,"offset":5405},"indent":[]}},{"type":"inlineCode","value":"scopes","position":{"start":{"line":154,"column":108,"offset":5405},"end":{"line":154,"column":116,"offset":5413},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":5298},"end":{"line":154,"column":116,"offset":5413},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":156,"column":3,"offset":5417},"end":{"line":156,"column":7,"offset":5421},"indent":[]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":156,"column":7,"offset":5421},"end":{"line":156,"column":17,"offset":5431},"indent":[]}},{"type":"text","value":" property describes fields that appear when reading an element from the API. Those fields are not actually stored\nin the database: they are ","position":{"start":{"line":156,"column":17,"offset":5431},"end":{"line":157,"column":27,"offset":5571},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"computed","position":{"start":{"line":157,"column":28,"offset":5572},"end":{"line":157,"column":36,"offset":5580},"indent":[]}}],"position":{"start":{"line":157,"column":27,"offset":5571},"end":{"line":157,"column":37,"offset":5581},"indent":[]}},{"type":"text","value":" at read-time by combining database fields. ","position":{"start":{"line":157,"column":37,"offset":5581},"end":{"line":157,"column":81,"offset":5625},"indent":[]}},{"type":"jsx","value":"<br />","position":{"start":{"line":157,"column":81,"offset":5625},"end":{"line":157,"column":87,"offset":5631},"indent":[]}},{"type":"text","value":"\nThe ","position":{"start":{"line":157,"column":87,"offset":5631},"end":{"line":158,"column":5,"offset":5636},"indent":[1]}},{"type":"inlineCode","value":"computed","position":{"start":{"line":158,"column":5,"offset":5636},"end":{"line":158,"column":15,"offset":5646},"indent":[]}},{"type":"text","value":" property is also the occasion to define custom queries linked to our model. Refer to the ","position":{"start":{"line":158,"column":15,"offset":5646},"end":{"line":158,"column":105,"offset":5736},"indent":[]}},{"type":"link","title":null,"url":"#computed","children":[{"type":"inlineCode","value":"Computed","position":{"start":{"line":158,"column":106,"offset":5737},"end":{"line":158,"column":116,"offset":5747},"indent":[]}}],"position":{"start":{"line":158,"column":105,"offset":5736},"end":{"line":158,"column":128,"offset":5759},"indent":[]}},{"type":"text","value":" type definition\nfor more information.","position":{"start":{"line":158,"column":128,"offset":5759},"end":{"line":159,"column":22,"offset":5797},"indent":[1]}}],"position":{"start":{"line":156,"column":3,"offset":5417},"end":{"line":159,"column":22,"offset":5797},"indent":[1,1,1]}}],"position":{"start":{"line":156,"column":1,"offset":5415},"end":{"line":159,"column":22,"offset":5797},"indent":[1,1,1]}}],"position":{"start":{"line":156,"column":1,"offset":5415},"end":{"line":159,"column":22,"offset":5797},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Property","position":{"start":{"line":161,"column":5,"offset":5803},"end":{"line":161,"column":15,"offset":5813},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5799},"end":{"line":161,"column":15,"offset":5813},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Computed","position":{"start":{"line":163,"column":5,"offset":5819},"end":{"line":163,"column":15,"offset":5829},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5815},"end":{"line":163,"column":15,"offset":5829},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Scopes","position":{"start":{"line":165,"column":5,"offset":5835},"end":{"line":165,"column":13,"offset":5843},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":5831},"end":{"line":165,"column":13,"offset":5843},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Other exports","position":{"start":{"line":167,"column":4,"offset":5848},"end":{"line":167,"column":17,"offset":5861},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":5845},"end":{"line":167,"column":17,"offset":5861},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Types","position":{"start":{"line":169,"column":5,"offset":5867},"end":{"line":169,"column":10,"offset":5872},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":5863},"end":{"line":169,"column":10,"offset":5872},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"FieldMode","position":{"start":{"line":171,"column":5,"offset":5878},"end":{"line":171,"column":14,"offset":5887},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":5874},"end":{"line":171,"column":14,"offset":5887},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":174,"column":1,"offset":5890},"end":{"line":174,"column":31,"offset":5920},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":174,"column":31,"offset":5920}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"harmonyjs-persistence\"\n    }}>{`HarmonyJS Persistence`}</h1>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{` handles the data of our application. It provides a convenient way to describe our models, and\nconnect them to our databases through accessors.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` While not mandatory, `}<a parentName=\"em\" {...{\n          \"href\": \"https://graphql.org/\"\n        }}>{`GraphQL`}</a>{` is the main target of the persistence module, and is needed`}</em>{`\n`}<em parentName=\"p\">{`to take full advantage of HarmonyJS`}</em></p>\n    <h2 {...{\n      \"id\": \"persistence\"\n    }}><inlineCode parentName=\"h2\">{`Persistence`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/persistence`}</inlineCode>{` default export is the `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` constructor.`}</p>\n    <p>{`This constructor allows us to create a `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance, which can be configured to handle our database accesses.\nA `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance only has two publicly available methods: the constructor itself, and an `}<inlineCode parentName=\"p\">{`initialize`}</inlineCode>{` function.`}</p>\n    <h3 {...{\n      \"id\": \"persistencenewpersistenceconfig-config-persistence\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::new(`}</inlineCode><a parentName=\"h3\" {...{\n        \"href\": \"#persistenceconfig\"\n      }}><inlineCode parentName=\"a\">{`PersistenceConfig`}</inlineCode></a><inlineCode parentName=\"h3\">{`: config): Persistence`}</inlineCode></h3>\n    <p>{`Constructor to create a new `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance. It takes a `}<a parentName=\"p\" {...{\n        \"href\": \"#persistenceconfig\"\n      }}><inlineCode parentName=\"a\">{`PersistenceConfig`}</inlineCode></a>{` object as parameter\nto configure the instance.`}</p>\n    <p>{`No further initialization steps are executed. To initialize our instance, use the `}<inlineCode parentName=\"p\">{`Persistence::initialize`}</inlineCode>{` method.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Persistence from '@harmonyjs/persistence'\n\n// Initialize a new Persistence instance\nconst persistence = new Persistence({\n    models: [...],\n})\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistenceinitialize-promiseboolean\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::initialize(): Promise<boolean>`}</inlineCode></h3>\n    <p>{`Initialization function computing our models and setting up our database accessors.`}</p>\n    <p>{`This functions returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` which resolves when the accessors are done loading.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Persistence from '@harmonyjs/persistence'\n\nasync function run() {\n    // Initialize a new Persistence instance\n    const persistence = new Persistence({\n        models: [...],\n    })\n\n    console.log('Initializing the Persistence instance...')\n\n    // Start our Persistence instance\n    await persistence.initialize()\n\n    console.log('Persistence instance initialized!')\n}\n\nrun()\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistencecontrollers\"\n    }}><inlineCode parentName=\"h3\">{`Persistence::controllers`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Persistence::controllers`}</inlineCode>{` getter exposes two ready-to-use Controllers:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controllers.ControllerGraphQL`}</inlineCode>{` can be used to expose a GraphQL endpoint configured with the Persistence instance schema.\nIts constructor accepts one `}<inlineCode parentName=\"li\">{`configuration`}</inlineCode>{` argument, of the following type:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type ControllerGraphQLConfig {\n    path: string, // The route on which to expose the GraphQL endpoint\n    enablePlayground: boolean, // Whether to enable the GraphQL Playground page on the endpoint\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`controllers.ControllerEvents`}</inlineCode>{` can be used to forward our data events to the application's Socket.IO layer. It doesn't require\nany configuration.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"persistenceconfig\"\n    }}><inlineCode parentName=\"h2\">{`PersistenceConfig`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`PersistenceConfig`}</inlineCode>{` object configures a `}<inlineCode parentName=\"p\">{`Persistence`}</inlineCode>{` instance. Here are the various parameters available:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type PersistenceConfig = {\n  models: Model[],\n  accessors?: {[key: string]: Accessor},\n  defaultAccessor?: string,\n  strict?: boolean,\n  log?: LogConfig,\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"persistenceconfigmodels\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::models`}</inlineCode></h3>\n    <p>{`The mandatory `}<inlineCode parentName=\"p\">{`models`}</inlineCode>{` field is an array of data-models. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{` definition to learn more about models.`}</p>\n    <p>{`This field contains the list of all models to expose in the Persistence schema.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigaccessors\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::accessors`}</inlineCode></h3>\n    <p>{`This optional field allows to give a mapping of `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{`. Each accessor has a unique key in the map,\nwhich can later be used to identify a `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{`'s accessor.`}</p>\n    <p>{`Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{` documentation to learn more.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigdefaultaccessor\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::defaultAccessor`}</inlineCode></h3>\n    <p>{`Key of the accessor to use when no accessor is specified for a model. If not provided, defaults to the first accessor in the map.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfigstrict\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::strict`}</inlineCode></h3>\n    <p>{`Whether to compile a schema in strict mode. When using strict mode, only CRUD actions for which a `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` function has been provided\nwill be added to the schema. To learn more about `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` functions, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"#model\"\n      }}><inlineCode parentName=\"a\">{`Model`}</inlineCode></a>{` documentation.`}</p>\n    <h3 {...{\n      \"id\": \"persistenceconfiglog\"\n    }}><inlineCode parentName=\"h3\">{`PersistenceConfig::log`}</inlineCode></h3>\n    <p>{`Configuration of the way the persistence instance logs its actions. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/api/utils#logconfig\"\n      }}>{`Log util documentation`}</a></p>\n    <h2 {...{\n      \"id\": \"model\"\n    }}><inlineCode parentName=\"h2\">{`Model`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{` type is used to describe a collection of objects to store in a database. HarmonyJS provides a unified way to\ndescribe such a model, that can later be translated to fit any storage mechanism. This translation is the role of the `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/accessors\"\n      }}><inlineCode parentName=\"a\">{`Accessors`}</inlineCode></a>{` plugins.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Model`}</inlineCode>{` type is as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type Model = {\n  name: string,\n  schema: {\n    [key: string]: Property\n  },\n\n  computed?: Computed,\n  scopes?: Scopes,\n\n  accessor?: string,\n  external?: boolean,\n}\n`}</code></pre>\n    <p>{`Only two properties are required: `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`schema`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` property is the name of the collection. This should be a singular noun. `}<br />{`\nIf it needs to be a composed word, use kebab case: `}<inlineCode parentName=\"li\">{`'my-multiple-words-name'`}</inlineCode></li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`schema`}</inlineCode>{` property is an object defining the base form of our collection. It maps each field name to a `}<a parentName=\"li\" {...{\n          \"href\": \"#property\"\n        }}><inlineCode parentName=\"a\">{`Property`}</inlineCode></a>{`\ndefinition, which is declared using HarmonyJS's `}<a parentName=\"li\" {...{\n          \"href\": \"#types\"\n        }}><inlineCode parentName=\"a\">{`Types`}</inlineCode></a>{`. You can see a sample `}<inlineCode parentName=\"li\">{`schema`}</inlineCode>{` in the `}<a parentName=\"li\" {...{\n          \"href\": \"/guides/creating-models\"\n        }}><inlineCode parentName=\"a\">{`Model`}</inlineCode>{` guide`}</a>{`.`}</li>\n    </ul>\n    <p>{`The next two properties are optional and allows us to extend the capabilities of our model: `}<inlineCode parentName=\"p\">{`computed`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`scopes`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`computed`}</inlineCode>{` property describes fields that appear when reading an element from the API. Those fields are not actually stored\nin the database: they are `}<em parentName=\"li\">{`computed`}</em>{` at read-time by combining database fields. `}<br />{`\nThe `}<inlineCode parentName=\"li\">{`computed`}</inlineCode>{` property is also the occasion to define custom queries linked to our model. Refer to the `}<a parentName=\"li\" {...{\n          \"href\": \"#computed\"\n        }}><inlineCode parentName=\"a\">{`Computed`}</inlineCode></a>{` type definition\nfor more information.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"property\"\n    }}><inlineCode parentName=\"h3\">{`Property`}</inlineCode></h3>\n    <h3 {...{\n      \"id\": \"computed\"\n    }}><inlineCode parentName=\"h3\">{`Computed`}</inlineCode></h3>\n    <h3 {...{\n      \"id\": \"scopes\"\n    }}><inlineCode parentName=\"h3\">{`Scopes`}</inlineCode></h3>\n    <h2 {...{\n      \"id\": \"other-exports\"\n    }}>{`Other exports`}</h2>\n    <h3 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h3>\n    <h3 {...{\n      \"id\": \"fieldmode\"\n    }}>{`FieldMode`}</h3>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}