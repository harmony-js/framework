{"expireTime":9007200832285636000,"key":"gatsby-plugin-mdx-entire-payload-558a8002f14ae77057e51c1d40909bbb-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":134,"offset":135},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":137},"end":{"line":5,"column":29,"offset":165},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"HarmonyJS Server","position":{"start":{"line":8,"column":3,"offset":170},"end":{"line":8,"column":19,"offset":186},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":168},"end":{"line":8,"column":19,"offset":186},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/server","position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":10,"column":20,"offset":207},"indent":[]}},{"type":"text","value":" handles the creation and runtime of a Node webserver. Under the hood, it uses HapiJS, but there is no\nneed to know HapiJS in order to start using HarmonyJS.","position":{"start":{"line":10,"column":20,"offset":207},"end":{"line":11,"column":55,"offset":364},"indent":[1]}}],"position":{"start":{"line":10,"column":1,"offset":188},"end":{"line":11,"column":55,"offset":364},"indent":[1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":4,"offset":369},"end":{"line":13,"column":9,"offset":374},"indent":[]}}],"position":{"start":{"line":13,"column":2,"offset":367},"end":{"line":13,"column":11,"offset":376},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":13,"column":11,"offset":376},"end":{"line":13,"column":12,"offset":377},"indent":[]}},{"type":"link","title":null,"url":"https://hapi.dev/","children":[{"type":"text","value":"HapiJS","position":{"start":{"line":13,"column":13,"offset":378},"end":{"line":13,"column":19,"offset":384},"indent":[]}}],"position":{"start":{"line":13,"column":12,"offset":377},"end":{"line":13,"column":39,"offset":404},"indent":[]}},{"type":"text","value":" knowledge is necessary to write your own ","position":{"start":{"line":13,"column":39,"offset":404},"end":{"line":13,"column":81,"offset":446},"indent":[]}},{"type":"link","title":null,"url":"/plugins/controllers","children":[{"type":"text","value":"Controller Plugins","position":{"start":{"line":13,"column":82,"offset":447},"end":{"line":13,"column":100,"offset":465},"indent":[]}}],"position":{"start":{"line":13,"column":81,"offset":446},"end":{"line":13,"column":123,"offset":488},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":366},"end":{"line":13,"column":124,"offset":489},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":366},"end":{"line":13,"column":124,"offset":489},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Server","position":{"start":{"line":15,"column":4,"offset":494},"end":{"line":15,"column":12,"offset":502},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":491},"end":{"line":15,"column":12,"offset":502},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"@harmonyjs/server","position":{"start":{"line":17,"column":1,"offset":504},"end":{"line":17,"column":20,"offset":523},"indent":[]}},{"type":"text","value":" only exports one element, its default export: the ","position":{"start":{"line":17,"column":20,"offset":523},"end":{"line":17,"column":71,"offset":574},"indent":[]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":17,"column":71,"offset":574},"end":{"line":17,"column":79,"offset":582},"indent":[]}},{"type":"text","value":" constructor.","position":{"start":{"line":17,"column":79,"offset":582},"end":{"line":17,"column":92,"offset":595},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":504},"end":{"line":17,"column":92,"offset":595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This constructor allows us to create a ","position":{"start":{"line":19,"column":1,"offset":597},"end":{"line":19,"column":40,"offset":636},"indent":[]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":19,"column":40,"offset":636},"end":{"line":19,"column":48,"offset":644},"indent":[]}},{"type":"text","value":" instance, which can be configured to expose our application's webserver.\nA ","position":{"start":{"line":19,"column":48,"offset":644},"end":{"line":20,"column":3,"offset":720},"indent":[1]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":20,"column":3,"offset":720},"end":{"line":20,"column":11,"offset":728},"indent":[]}},{"type":"text","value":" instance only has two publicly available methods: the constructor itself, and a ","position":{"start":{"line":20,"column":11,"offset":728},"end":{"line":20,"column":92,"offset":809},"indent":[]}},{"type":"inlineCode","value":"start","position":{"start":{"line":20,"column":92,"offset":809},"end":{"line":20,"column":99,"offset":816},"indent":[]}},{"type":"text","value":" function.","position":{"start":{"line":20,"column":99,"offset":816},"end":{"line":20,"column":109,"offset":826},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":597},"end":{"line":20,"column":109,"offset":826},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Server::new(","position":{"start":{"line":22,"column":5,"offset":832},"end":{"line":22,"column":19,"offset":846},"indent":[]}},{"type":"link","title":null,"url":"#serverconfig","children":[{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":22,"column":20,"offset":847},"end":{"line":22,"column":34,"offset":861},"indent":[]}}],"position":{"start":{"line":22,"column":19,"offset":846},"end":{"line":22,"column":50,"offset":877},"indent":[]}},{"type":"inlineCode","value":": config): Server","position":{"start":{"line":22,"column":50,"offset":877},"end":{"line":22,"column":69,"offset":896},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":828},"end":{"line":22,"column":69,"offset":896},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Constructor to create a new ","position":{"start":{"line":24,"column":1,"offset":898},"end":{"line":24,"column":29,"offset":926},"indent":[]}},{"type":"inlineCode","value":"Server","position":{"start":{"line":24,"column":29,"offset":926},"end":{"line":24,"column":37,"offset":934},"indent":[]}},{"type":"text","value":" instance. It takes a ","position":{"start":{"line":24,"column":37,"offset":934},"end":{"line":24,"column":59,"offset":956},"indent":[]}},{"type":"link","title":null,"url":"#serverconfig","children":[{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":24,"column":60,"offset":957},"end":{"line":24,"column":74,"offset":971},"indent":[]}}],"position":{"start":{"line":24,"column":59,"offset":956},"end":{"line":24,"column":90,"offset":987},"indent":[]}},{"type":"text","value":" object as parameter\nto configure the instance.","position":{"start":{"line":24,"column":90,"offset":987},"end":{"line":25,"column":27,"offset":1034},"indent":[1]}}],"position":{"start":{"line":24,"column":1,"offset":898},"end":{"line":25,"column":27,"offset":1034},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"No further initialization steps are executed. To launch the server, use the ","position":{"start":{"line":27,"column":1,"offset":1036},"end":{"line":27,"column":77,"offset":1112},"indent":[]}},{"type":"inlineCode","value":"Server::start","position":{"start":{"line":27,"column":77,"offset":1112},"end":{"line":27,"column":92,"offset":1127},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":27,"column":92,"offset":1127},"end":{"line":27,"column":100,"offset":1135},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1036},"end":{"line":27,"column":100,"offset":1135},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":29,"column":1,"offset":1137},"end":{"line":29,"column":73,"offset":1209},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Server from '@harmonyjs/server'\n\n// Initialize a new Server instance\nconst server = new Server({\n    endpoint: {\n        host: '0.0.0.0',\n        port: 80,\n    },\n})","position":{"start":{"line":31,"column":1,"offset":1211},"end":{"line":41,"column":4,"offset":1393},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"Server::start(): Promise<boolean>","position":{"start":{"line":43,"column":5,"offset":1399},"end":{"line":43,"column":40,"offset":1434},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1395},"end":{"line":43,"column":40,"offset":1434},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initialization function launching the webserver.","position":{"start":{"line":45,"column":1,"offset":1436},"end":{"line":45,"column":49,"offset":1484},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1436},"end":{"line":45,"column":49,"offset":1484},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function returns a ","position":{"start":{"line":47,"column":1,"offset":1486},"end":{"line":47,"column":25,"offset":1510},"indent":[]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":47,"column":25,"offset":1510},"end":{"line":47,"column":34,"offset":1519},"indent":[]}},{"type":"text","value":" which resolves when the server is done loading.","position":{"start":{"line":47,"column":34,"offset":1519},"end":{"line":47,"column":82,"offset":1567},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1486},"end":{"line":47,"column":82,"offset":1567},"indent":[]}},{"type":"jsx","value":"<b style={{display: \"block\", marginBottom: \"-1.5rem\" }}>Sample usage</b>","position":{"start":{"line":49,"column":1,"offset":1569},"end":{"line":49,"column":73,"offset":1641},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Server from '@harmonyjs/server'\n\nasync function run() {\n    // Initialize a new Server instance\n    const server = new Server({\n        endpoint: {\n            host: '0.0.0.0',\n            port: 80,\n        },\n    })\n\n    console.log('Launching the server...')\n\n    // Start our server\n    try {\n        await server.start()\n\n        console.log('Server launched!')\n    }\n    catch (err) {\n        console.log('An error occurred while launching the server')\n        console.error(err)\n    }\n}\n\nrun()","position":{"start":{"line":51,"column":1,"offset":1643},"end":{"line":78,"column":4,"offset":2159},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":80,"column":4,"offset":2164},"end":{"line":80,"column":18,"offset":2178},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":2161},"end":{"line":80,"column":18,"offset":2178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":82,"column":1,"offset":2180},"end":{"line":82,"column":5,"offset":2184},"indent":[]}},{"type":"inlineCode","value":"ServerConfig","position":{"start":{"line":82,"column":5,"offset":2184},"end":{"line":82,"column":19,"offset":2198},"indent":[]}},{"type":"text","value":" object allows us to configure the server before running it. Here are the available options:","position":{"start":{"line":82,"column":19,"offset":2198},"end":{"line":82,"column":111,"offset":2290},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2180},"end":{"line":82,"column":111,"offset":2290},"indent":[]}},{"type":"code","lang":"ts","meta":null,"value":"type ServerConfig = {\n  endpoint?: {\n    host: string,\n    port: number,\n  },\n  authentication?: {\n    secret: string,\n    validate?: (any) => Promise<boolean>,\n  },\n  cluster?: {\n    forks?: {\n      size?: number,\n      header?: string,\n      proxy?: boolean,\n    },\n    redis: boolean | {\n      key?: string,\n      host?: string,\n      port?: number,\n    },\n  },\n  controllers?: Controller[],\n  log?: LogConfig,\n}","position":{"start":{"line":84,"column":1,"offset":2292},"end":{"line":109,"column":4,"offset":2717},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::endpoint","position":{"start":{"line":111,"column":5,"offset":2723},"end":{"line":111,"column":29,"offset":2747},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":2719},"end":{"line":111,"column":29,"offset":2747},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The optional endpoint field allows us to choose the host and port to run or server on. Omitting this field will launch\na server on ","position":{"start":{"line":113,"column":1,"offset":2749},"end":{"line":114,"column":13,"offset":2880},"indent":[1]}},{"type":"inlineCode","value":"localhost:3000","position":{"start":{"line":114,"column":13,"offset":2880},"end":{"line":114,"column":29,"offset":2896},"indent":[]}},{"type":"text","value":" by default.","position":{"start":{"line":114,"column":29,"offset":2896},"end":{"line":114,"column":41,"offset":2908},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2749},"end":{"line":114,"column":41,"offset":2908},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"This field takes two subfields, ","position":{"start":{"line":116,"column":1,"offset":2910},"end":{"line":116,"column":33,"offset":2942},"indent":[]}},{"type":"inlineCode","value":"endpoint.host","position":{"start":{"line":116,"column":33,"offset":2942},"end":{"line":116,"column":48,"offset":2957},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":116,"column":48,"offset":2957},"end":{"line":116,"column":53,"offset":2962},"indent":[]}},{"type":"inlineCode","value":"endpoint.port","position":{"start":{"line":116,"column":53,"offset":2962},"end":{"line":116,"column":68,"offset":2977},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2910},"end":{"line":116,"column":68,"offset":2977},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::authentication","position":{"start":{"line":118,"column":5,"offset":2983},"end":{"line":118,"column":35,"offset":3013},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":2979},"end":{"line":118,"column":35,"offset":3013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This optional field handles the built-in JWT-authentication scheme. It has two subfields: ","position":{"start":{"line":120,"column":1,"offset":3015},"end":{"line":120,"column":91,"offset":3105},"indent":[]}},{"type":"inlineCode","value":"authentication.secret","position":{"start":{"line":120,"column":91,"offset":3105},"end":{"line":120,"column":114,"offset":3128},"indent":[]}},{"type":"text","value":", the\nsecret to use to sign the JWT tokens emitted from the application, and ","position":{"start":{"line":120,"column":114,"offset":3128},"end":{"line":121,"column":72,"offset":3205},"indent":[1]}},{"type":"inlineCode","value":"authentication.validate","position":{"start":{"line":121,"column":72,"offset":3205},"end":{"line":121,"column":97,"offset":3230},"indent":[]}},{"type":"text","value":", an optional function\nwhich receives the decoded token before each requests and returns a ","position":{"start":{"line":121,"column":97,"offset":3230},"end":{"line":122,"column":69,"offset":3321},"indent":[1]}},{"type":"inlineCode","value":"Promise","position":{"start":{"line":122,"column":69,"offset":3321},"end":{"line":122,"column":78,"offset":3330},"indent":[]}},{"type":"text","value":" resolving to ","position":{"start":{"line":122,"column":78,"offset":3330},"end":{"line":122,"column":92,"offset":3344},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":122,"column":92,"offset":3344},"end":{"line":122,"column":98,"offset":3350},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":122,"column":98,"offset":3350},"end":{"line":122,"column":102,"offset":3354},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":122,"column":102,"offset":3354},"end":{"line":122,"column":109,"offset":3361},"indent":[]}},{"type":"text","value":" to indicate\nwhether the token is considered valid or not.","position":{"start":{"line":122,"column":109,"offset":3361},"end":{"line":123,"column":46,"offset":3419},"indent":[1]}}],"position":{"start":{"line":120,"column":1,"offset":3015},"end":{"line":123,"column":46,"offset":3419},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":125,"column":4,"offset":3424},"end":{"line":125,"column":9,"offset":3429},"indent":[]}}],"position":{"start":{"line":125,"column":2,"offset":3422},"end":{"line":125,"column":11,"offset":3431},"indent":[]}},{"type":"text","value":" the ","position":{"start":{"line":125,"column":11,"offset":3431},"end":{"line":125,"column":16,"offset":3436},"indent":[]}},{"type":"inlineCode","value":"validate","position":{"start":{"line":125,"column":16,"offset":3436},"end":{"line":125,"column":26,"offset":3446},"indent":[]}},{"type":"text","value":" function is the responsibility of the application and arrives","position":{"start":{"line":125,"column":26,"offset":3446},"end":{"line":125,"column":88,"offset":3508},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3421},"end":{"line":125,"column":89,"offset":3509},"indent":[]}},{"type":"text","value":" after ","position":{"start":{"line":125,"column":89,"offset":3509},"end":{"line":125,"column":96,"offset":3516},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the signature check","position":{"start":{"line":125,"column":97,"offset":3517},"end":{"line":125,"column":116,"offset":3536},"indent":[]}}],"position":{"start":{"line":125,"column":96,"offset":3516},"end":{"line":125,"column":117,"offset":3537},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3421},"end":{"line":125,"column":117,"offset":3537},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::cluster","position":{"start":{"line":127,"column":5,"offset":3543},"end":{"line":127,"column":28,"offset":3566},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3539},"end":{"line":127,"column":28,"offset":3566},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The cluster configuration define how the app should handle replication, either locally using Node's forking system, or\nacross multiple machines such as in a Kubernetes environment.","position":{"start":{"line":129,"column":1,"offset":3568},"end":{"line":130,"column":62,"offset":3748},"indent":[1]}}],"position":{"start":{"line":129,"column":1,"offset":3568},"end":{"line":130,"column":62,"offset":3748},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"ServerConfig::cluster::forks","position":{"start":{"line":132,"column":6,"offset":3755},"end":{"line":132,"column":36,"offset":3785},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":3750},"end":{"line":132,"column":36,"offset":3785},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":134,"column":1,"offset":3787},"end":{"line":134,"column":5,"offset":3791},"indent":[]}},{"type":"inlineCode","value":"cluster.forks","position":{"start":{"line":134,"column":5,"offset":3791},"end":{"line":134,"column":20,"offset":3806},"indent":[]}},{"type":"text","value":" subfield allows to configure how our application should split across multiple forks.","position":{"start":{"line":134,"column":20,"offset":3806},"end":{"line":134,"column":105,"offset":3891},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":3787},"end":{"line":134,"column":105,"offset":3891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Under the hood, HarmonyJS uses Socket.IO for client->server communication. Forks parameters allow to insure a socket connection\nis always forwarded to the correct server.","position":{"start":{"line":136,"column":1,"offset":3893},"end":{"line":137,"column":43,"offset":4063},"indent":[1]}}],"position":{"start":{"line":136,"column":1,"offset":3893},"end":{"line":137,"column":43,"offset":4063},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"It takes three optional parameters:","position":{"start":{"line":139,"column":1,"offset":4065},"end":{"line":139,"column":36,"offset":4100},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4065},"end":{"line":139,"column":36,"offset":4100},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"size","position":{"start":{"line":141,"column":3,"offset":4104},"end":{"line":141,"column":9,"offset":4110},"indent":[]}},{"type":"text","value":": the number of instances to run. If lower than 2, then no forks are created. Defaults to ","position":{"start":{"line":141,"column":9,"offset":4110},"end":{"line":141,"column":99,"offset":4200},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":141,"column":99,"offset":4200},"end":{"line":141,"column":102,"offset":4203},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":141,"column":102,"offset":4203},"end":{"line":141,"column":103,"offset":4204},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":4104},"end":{"line":141,"column":103,"offset":4204},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":4102},"end":{"line":141,"column":103,"offset":4204},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"header","position":{"start":{"line":142,"column":3,"offset":4207},"end":{"line":142,"column":11,"offset":4215},"indent":[]}},{"type":"text","value":": the header containing the real user IP address. Useful if used behind a proxy. Defaults to ","position":{"start":{"line":142,"column":11,"offset":4215},"end":{"line":142,"column":104,"offset":4308},"indent":[]}},{"type":"inlineCode","value":"'x-forwarded-for'","position":{"start":{"line":142,"column":104,"offset":4308},"end":{"line":142,"column":123,"offset":4327},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":142,"column":123,"offset":4327},"end":{"line":142,"column":124,"offset":4328},"indent":[]}}],"position":{"start":{"line":142,"column":3,"offset":4207},"end":{"line":142,"column":124,"offset":4328},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4205},"end":{"line":142,"column":124,"offset":4328},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"proxy","position":{"start":{"line":143,"column":3,"offset":4331},"end":{"line":143,"column":10,"offset":4338},"indent":[]}},{"type":"text","value":": tells if the application is running behind a proxy. Defaults to ","position":{"start":{"line":143,"column":10,"offset":4338},"end":{"line":143,"column":76,"offset":4404},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":143,"column":76,"offset":4404},"end":{"line":143,"column":83,"offset":4411},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":143,"column":83,"offset":4411},"end":{"line":143,"column":84,"offset":4412},"indent":[]}}],"position":{"start":{"line":143,"column":3,"offset":4331},"end":{"line":143,"column":84,"offset":4412},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4329},"end":{"line":143,"column":84,"offset":4412},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":4102},"end":{"line":143,"column":84,"offset":4412},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"ServerConfig::cluster::redis","position":{"start":{"line":145,"column":6,"offset":4419},"end":{"line":145,"column":36,"offset":4449},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4414},"end":{"line":145,"column":36,"offset":4449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":147,"column":1,"offset":4451},"end":{"line":147,"column":5,"offset":4455},"indent":[]}},{"type":"inlineCode","value":"cluster.redis","position":{"start":{"line":147,"column":5,"offset":4455},"end":{"line":147,"column":20,"offset":4470},"indent":[]}},{"type":"text","value":" subfield allows to configure our application for working on a clustered environment, such as Kubernetes.","position":{"start":{"line":147,"column":20,"offset":4470},"end":{"line":147,"column":125,"offset":4575},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4451},"end":{"line":147,"column":125,"offset":4575},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Under the hood, HarmonyJS uses Socket.IO for client->server communication. Redis parameters allow to insure that messages\nare spread to all clients, whichever the emitting server, and vice-versa.","position":{"start":{"line":149,"column":1,"offset":4577},"end":{"line":150,"column":74,"offset":4772},"indent":[1]}}],"position":{"start":{"line":149,"column":1,"offset":4577},"end":{"line":150,"column":74,"offset":4772},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"It takes three optional parameters:","position":{"start":{"line":152,"column":1,"offset":4774},"end":{"line":152,"column":36,"offset":4809},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":4774},"end":{"line":152,"column":36,"offset":4809},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"key","position":{"start":{"line":154,"column":3,"offset":4813},"end":{"line":154,"column":8,"offset":4818},"indent":[]}},{"type":"text","value":": the identifier of the Redis sync cache. Defaults to ","position":{"start":{"line":154,"column":8,"offset":4818},"end":{"line":154,"column":62,"offset":4872},"indent":[]}},{"type":"inlineCode","value":"'harmony'","position":{"start":{"line":154,"column":62,"offset":4872},"end":{"line":154,"column":73,"offset":4883},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":154,"column":73,"offset":4883},"end":{"line":154,"column":75,"offset":4885},"indent":[]}},{"type":"jsx","value":"<br/>","position":{"start":{"line":154,"column":75,"offset":4885},"end":{"line":154,"column":80,"offset":4890},"indent":[]}},{"type":"text","value":"\nUse this key if you intend to run multiple HarmonyJS applications on the same cluster or using the same Redis server.","position":{"start":{"line":154,"column":80,"offset":4890},"end":{"line":155,"column":118,"offset":5008},"indent":[1]}}],"position":{"start":{"line":154,"column":3,"offset":4813},"end":{"line":155,"column":118,"offset":5008},"indent":[1]}}],"position":{"start":{"line":154,"column":1,"offset":4811},"end":{"line":155,"column":118,"offset":5008},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"host","position":{"start":{"line":156,"column":3,"offset":5011},"end":{"line":156,"column":9,"offset":5017},"indent":[]}},{"type":"text","value":": the hostname on which to access the Redis server. Defaults to ","position":{"start":{"line":156,"column":9,"offset":5017},"end":{"line":156,"column":73,"offset":5081},"indent":[]}},{"type":"inlineCode","value":"'localhost'","position":{"start":{"line":156,"column":73,"offset":5081},"end":{"line":156,"column":86,"offset":5094},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":156,"column":86,"offset":5094},"end":{"line":156,"column":87,"offset":5095},"indent":[]}}],"position":{"start":{"line":156,"column":3,"offset":5011},"end":{"line":156,"column":87,"offset":5095},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":5009},"end":{"line":156,"column":87,"offset":5095},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"port","position":{"start":{"line":157,"column":3,"offset":5098},"end":{"line":157,"column":9,"offset":5104},"indent":[]}},{"type":"text","value":": the port on which the Redis server is running. Defaults to ","position":{"start":{"line":157,"column":9,"offset":5104},"end":{"line":157,"column":70,"offset":5165},"indent":[]}},{"type":"inlineCode","value":"6379","position":{"start":{"line":157,"column":70,"offset":5165},"end":{"line":157,"column":76,"offset":5171},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":157,"column":76,"offset":5171},"end":{"line":157,"column":77,"offset":5172},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":5098},"end":{"line":157,"column":77,"offset":5172},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5096},"end":{"line":157,"column":77,"offset":5172},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":4811},"end":{"line":157,"column":77,"offset":5172},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::controllers","position":{"start":{"line":159,"column":5,"offset":5178},"end":{"line":159,"column":32,"offset":5205},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":5174},"end":{"line":159,"column":32,"offset":5205},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The controllers array contains a list of Controllers. Controllers are HarmonyJS plugins allowing to describe how to handle\nspecific routes, such as serving a static directory, routing to an SPA or exposing a GraphQL endpoint.","position":{"start":{"line":161,"column":1,"offset":5207},"end":{"line":162,"column":103,"offset":5432},"indent":[1]}}],"position":{"start":{"line":161,"column":1,"offset":5207},"end":{"line":162,"column":103,"offset":5432},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"To find more information about Controllers, refer to ","position":{"start":{"line":164,"column":1,"offset":5434},"end":{"line":164,"column":54,"offset":5487},"indent":[]}},{"type":"link","title":null,"url":"/plugins/controllers","children":[{"type":"text","value":"their documentation","position":{"start":{"line":164,"column":55,"offset":5488},"end":{"line":164,"column":74,"offset":5507},"indent":[]}}],"position":{"start":{"line":164,"column":54,"offset":5487},"end":{"line":164,"column":97,"offset":5530},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":164,"column":97,"offset":5530},"end":{"line":164,"column":98,"offset":5531},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5434},"end":{"line":164,"column":98,"offset":5531},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"inlineCode","value":"ServerConfig::log","position":{"start":{"line":166,"column":5,"offset":5537},"end":{"line":166,"column":24,"offset":5556},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5533},"end":{"line":166,"column":24,"offset":5556},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Configuration of the way the server instance logs its actions. Refer to the ","position":{"start":{"line":168,"column":1,"offset":5558},"end":{"line":168,"column":77,"offset":5634},"indent":[]}},{"type":"link","title":null,"url":"/api/utils#logconfig","children":[{"type":"text","value":"Log util documentation","position":{"start":{"line":168,"column":78,"offset":5635},"end":{"line":168,"column":100,"offset":5657},"indent":[]}}],"position":{"start":{"line":168,"column":77,"offset":5634},"end":{"line":168,"column":123,"offset":5680},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":5558},"end":{"line":168,"column":123,"offset":5680},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":171,"column":1,"offset":5683},"end":{"line":171,"column":31,"offset":5713},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":171,"column":31,"offset":5713}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/home/jeremie/Workspaces/webstorm/projects/harmony/docz/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"harmonyjs-server\"\n    }}>{`HarmonyJS Server`}</h1>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/server`}</inlineCode>{` handles the creation and runtime of a Node webserver. Under the hood, it uses HapiJS, but there is no\nneed to know HapiJS in order to start using HarmonyJS.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` `}<a parentName=\"em\" {...{\n          \"href\": \"https://hapi.dev/\"\n        }}>{`HapiJS`}</a>{` knowledge is necessary to write your own `}<a parentName=\"em\" {...{\n          \"href\": \"/plugins/controllers\"\n        }}>{`Controller Plugins`}</a></em></p>\n    <h2 {...{\n      \"id\": \"server\"\n    }}><inlineCode parentName=\"h2\">{`Server`}</inlineCode></h2>\n    <p><inlineCode parentName=\"p\">{`@harmonyjs/server`}</inlineCode>{` only exports one element, its default export: the `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` constructor.`}</p>\n    <p>{`This constructor allows us to create a `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` instance, which can be configured to expose our application's webserver.\nA `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` instance only has two publicly available methods: the constructor itself, and a `}<inlineCode parentName=\"p\">{`start`}</inlineCode>{` function.`}</p>\n    <h3 {...{\n      \"id\": \"servernewserverconfig-config-server\"\n    }}><inlineCode parentName=\"h3\">{`Server::new(`}</inlineCode><a parentName=\"h3\" {...{\n        \"href\": \"#serverconfig\"\n      }}><inlineCode parentName=\"a\">{`ServerConfig`}</inlineCode></a><inlineCode parentName=\"h3\">{`: config): Server`}</inlineCode></h3>\n    <p>{`Constructor to create a new `}<inlineCode parentName=\"p\">{`Server`}</inlineCode>{` instance. It takes a `}<a parentName=\"p\" {...{\n        \"href\": \"#serverconfig\"\n      }}><inlineCode parentName=\"a\">{`ServerConfig`}</inlineCode></a>{` object as parameter\nto configure the instance.`}</p>\n    <p>{`No further initialization steps are executed. To launch the server, use the `}<inlineCode parentName=\"p\">{`Server::start`}</inlineCode>{` method.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Server from '@harmonyjs/server'\n\n// Initialize a new Server instance\nconst server = new Server({\n    endpoint: {\n        host: '0.0.0.0',\n        port: 80,\n    },\n})\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"serverstart-promiseboolean\"\n    }}><inlineCode parentName=\"h3\">{`Server::start(): Promise<boolean>`}</inlineCode></h3>\n    <p>{`Initialization function launching the webserver.`}</p>\n    <p>{`This function returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` which resolves when the server is done loading.`}</p>\n    <b style={{\n      display: \"block\",\n      marginBottom: \"-1.5rem\"\n    }}>Sample usage</b>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Server from '@harmonyjs/server'\n\nasync function run() {\n    // Initialize a new Server instance\n    const server = new Server({\n        endpoint: {\n            host: '0.0.0.0',\n            port: 80,\n        },\n    })\n\n    console.log('Launching the server...')\n\n    // Start our server\n    try {\n        await server.start()\n\n        console.log('Server launched!')\n    }\n    catch (err) {\n        console.log('An error occurred while launching the server')\n        console.error(err)\n    }\n}\n\nrun()\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"serverconfig\"\n    }}><inlineCode parentName=\"h2\">{`ServerConfig`}</inlineCode></h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ServerConfig`}</inlineCode>{` object allows us to configure the server before running it. Here are the available options:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`type ServerConfig = {\n  endpoint?: {\n    host: string,\n    port: number,\n  },\n  authentication?: {\n    secret: string,\n    validate?: (any) => Promise<boolean>,\n  },\n  cluster?: {\n    forks?: {\n      size?: number,\n      header?: string,\n      proxy?: boolean,\n    },\n    redis: boolean | {\n      key?: string,\n      host?: string,\n      port?: number,\n    },\n  },\n  controllers?: Controller[],\n  log?: LogConfig,\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"serverconfigendpoint\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::endpoint`}</inlineCode></h3>\n    <p>{`The optional endpoint field allows us to choose the host and port to run or server on. Omitting this field will launch\na server on `}<inlineCode parentName=\"p\">{`localhost:3000`}</inlineCode>{` by default.`}</p>\n    <p>{`This field takes two subfields, `}<inlineCode parentName=\"p\">{`endpoint.host`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`endpoint.port`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"serverconfigauthentication\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::authentication`}</inlineCode></h3>\n    <p>{`This optional field handles the built-in JWT-authentication scheme. It has two subfields: `}<inlineCode parentName=\"p\">{`authentication.secret`}</inlineCode>{`, the\nsecret to use to sign the JWT tokens emitted from the application, and `}<inlineCode parentName=\"p\">{`authentication.validate`}</inlineCode>{`, an optional function\nwhich receives the decoded token before each requests and returns a `}<inlineCode parentName=\"p\">{`Promise`}</inlineCode>{` resolving to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` to indicate\nwhether the token is considered valid or not.`}</p>\n    <p><em parentName=\"p\"><strong parentName=\"em\">{`Note:`}</strong>{` the `}<inlineCode parentName=\"em\">{`validate`}</inlineCode>{` function is the responsibility of the application and arrives`}</em>{` after `}<em parentName=\"p\">{`the signature check`}</em></p>\n    <h3 {...{\n      \"id\": \"serverconfigcluster\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::cluster`}</inlineCode></h3>\n    <p>{`The cluster configuration define how the app should handle replication, either locally using Node's forking system, or\nacross multiple machines such as in a Kubernetes environment.`}</p>\n    <h4 {...{\n      \"id\": \"serverconfigclusterforks\"\n    }}><inlineCode parentName=\"h4\">{`ServerConfig::cluster::forks`}</inlineCode></h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cluster.forks`}</inlineCode>{` subfield allows to configure how our application should split across multiple forks.`}</p>\n    <p>{`Under the hood, HarmonyJS uses Socket.IO for client->server communication. Forks parameters allow to insure a socket connection\nis always forwarded to the correct server.`}</p>\n    <p>{`It takes three optional parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`size`}</inlineCode>{`: the number of instances to run. If lower than 2, then no forks are created. Defaults to `}<inlineCode parentName=\"li\">{`1`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`header`}</inlineCode>{`: the header containing the real user IP address. Useful if used behind a proxy. Defaults to `}<inlineCode parentName=\"li\">{`'x-forwarded-for'`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`proxy`}</inlineCode>{`: tells if the application is running behind a proxy. Defaults to `}<inlineCode parentName=\"li\">{`false`}</inlineCode>{`.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"serverconfigclusterredis\"\n    }}><inlineCode parentName=\"h4\">{`ServerConfig::cluster::redis`}</inlineCode></h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`cluster.redis`}</inlineCode>{` subfield allows to configure our application for working on a clustered environment, such as Kubernetes.`}</p>\n    <p>{`Under the hood, HarmonyJS uses Socket.IO for client->server communication. Redis parameters allow to insure that messages\nare spread to all clients, whichever the emitting server, and vice-versa.`}</p>\n    <p>{`It takes three optional parameters:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`key`}</inlineCode>{`: the identifier of the Redis sync cache. Defaults to `}<inlineCode parentName=\"li\">{`'harmony'`}</inlineCode>{`. `}<br />{`\nUse this key if you intend to run multiple HarmonyJS applications on the same cluster or using the same Redis server.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`host`}</inlineCode>{`: the hostname on which to access the Redis server. Defaults to `}<inlineCode parentName=\"li\">{`'localhost'`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`port`}</inlineCode>{`: the port on which the Redis server is running. Defaults to `}<inlineCode parentName=\"li\">{`6379`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"serverconfigcontrollers\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::controllers`}</inlineCode></h3>\n    <p>{`The controllers array contains a list of Controllers. Controllers are HarmonyJS plugins allowing to describe how to handle\nspecific routes, such as serving a static directory, routing to an SPA or exposing a GraphQL endpoint.`}</p>\n    <p>{`To find more information about Controllers, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/plugins/controllers\"\n      }}>{`their documentation`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"serverconfiglog\"\n    }}><inlineCode parentName=\"h3\">{`ServerConfig::log`}</inlineCode></h3>\n    <p>{`Configuration of the way the server instance logs its actions. Refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/api/utils#logconfig\"\n      }}>{`Log util documentation`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}